-- ✅ Combo Event Script + GUI Progress Bar - Heo Edition
if _G.COMBO_EVENT then
    warn("⛔ Script đã chạy trước đó!")
    return
end
_G.COMBO_EVENT = true

-- ⚙️ Service & Data
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")
local Save = require(ReplicatedStorage.Library.Client.Save)
local HttpService = game:GetService("HttpService")

-- 🗺️ Map IDs
local FARM_PLACEID = 119454325063278
local FISH_PLACEID = 95635359880599

-- ⏱️ Thời gian yêu cầu (30 phút mỗi event)
local REQUIRED_SECONDS = 30 * 60

-- 📂 Data runtime
local runtime = {
    farm = { total = 0, last = os.time(), done = false },
    fish = { total = 0, last = os.time(), done = false },
    lastDay = os.date("%d/%m/%Y"),
}

-- 🛠️ Load/Save
local function getFileName()
    return "comboEventLog.json"
end

local function loadData()
    if isfile(getFileName()) then
        local ok, data = pcall(function()
            return HttpService:JSONDecode(readfile(getFileName()))
        end)
        if ok and data then runtime = data end
    end
end

local function saveData()
    runtime.lastDay = os.date("%d/%m/%Y")
    writefile(getFileName(), HttpService:JSONEncode(runtime))
end

-- 🔄 Reset theo ngày
local function resetIfNewDay()
    local today = os.date("%d/%m/%Y")
    if runtime.lastDay ~= today then
        runtime = {
            farm = { total = 0, last = os.time(), done = false },
            fish = { total = 0, last = os.time(), done = false },
            lastDay = today,
        }
        saveData()
    end
end

-- 📊 Time tracking
local function updateProgress(which)
    local now = os.time()
    local data = runtime[which]
    data.total = data.total + (now - data.last)
    data.last = now
    if data.total >= REQUIRED_SECONDS then
        data.done = true
    end
    saveData()
end

-- 🎨 GUI progress
local function createGUI()
    if PlayerGui:FindFirstChild("EventProgressUI") then
        PlayerGui.EventProgressUI:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "EventProgressUI"
    screenGui.Parent = PlayerGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 250, 0, 68)
    frame.Position = UDim2.new(1, -260, 1, -100)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    frame.BackgroundTransparency = 0.25
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

    local function createProgressRow(parent, text, yPos, color)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -10, 0, 20)
        label.Position = UDim2.new(0, 5, 0, yPos)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(230, 230, 230)
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Font = Enum.Font.GothamBold
        label.TextSize = 30
        label.Text = text .. ": 0%"
        label.Parent = parent

        local barBg = Instance.new("Frame")
        barBg.Size = UDim2.new(1, -10, 0, 12)
        barBg.Position = UDim2.new(0, 5, 0, yPos + 22)
        barBg.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        barBg.BorderSizePixel = 0
        barBg.Parent = parent
        Instance.new("UICorner", barBg).CornerRadius = UDim.new(0, 6)

        local bar = Instance.new("Frame")
        bar.Size = UDim2.new(0, 0, 1, 0)
        bar.BackgroundColor3 = color
        bar.BorderSizePixel = 0
        bar.Parent = barBg
        Instance.new("UICorner", bar).CornerRadius = UDim.new(0, 6)

        return label, bar
    end

    local farmLabel, farmBar = createProgressRow(frame, "Farm", 5, Color3.fromRGB(100, 255, 100))
    local fishLabel, fishBar = createProgressRow(frame, "Fishing", 50, Color3.fromRGB(100, 150, 255))

    spawn(function()
        while screenGui.Parent do
            local farmPct = math.min(100, math.floor((runtime.farm.total / REQUIRED_SECONDS) * 100))
            local fishPct = math.min(100, math.floor((runtime.fish.total / REQUIRED_SECONDS) * 100))

            farmLabel.Text = string.format("Farm: %d%%", farmPct)
            farmBar.Size = UDim2.new(farmPct / 100, 0, 1, 0)
            fishLabel.Text = string.format("Fishing: %d%%", fishPct)
            fishBar.Size = UDim2.new(fishPct / 100, 0, 1, 0)

            wait(1)
        end
    end)
end

-- 🧭 Teleport
local function teleportToFarm()
    local tp = workspace.__THINGS.Instances.FarmingWorld.Teleports:GetChildren()[5]
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if tp and hrp then
        hrp.CFrame = tp.CFrame + Vector3.new(0, 3, 0)
        runtime.farm.last = os.time() -- 🔥 Reset timer khi vào Farm
    else
        TeleportService:Teleport(FARM_PLACEID, player)
    end
end

local function teleportToFishing()
    local tp = workspace.__THINGS.Instances.FishingEvent.Teleports.Enter
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if tp and hrp then
        hrp.CFrame = tp.CFrame + Vector3.new(0, 3, 0)
        runtime.fish.last = os.time() -- 🔥 Reset timer khi vào Fishing
    else
        TeleportService:Teleport(FISH_PLACEID, player)
    end
end

-- ⏳ Tracker Farm
local function trackFarm()
    spawn(function()
        while not runtime.farm.done do
            updateProgress("farm")
            wait(10)
        end
        if not runtime.fish.done then
            teleportToFishing()
            trackFishing()
        end
    end)
end

-- 🎣 Tracker Fishing
local function trackFishing()
    spawn(function()
        while not runtime.fish.done do
            updateProgress("fish")
            wait(10)
        end
        if not runtime.farm.done then
            teleportToFarm()
            trackFarm()
        end
    end)
end

-- 🕒 Time Trial Checker
local function getRunsUsed()
    local saveData = Save.Get()
    return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function waitUntilMaxRuns()
    while true do
        local used = getRunsUsed()
        if used >= 10 then
            break
        else
            wait(300)
        end
    end
end

-- 🚦 Main
local function main()
    loadData()
    resetIfNewDay()
    createGUI()
    waitUntilMaxRuns()

    local placeId = game.PlaceId

    if runtime.farm.done and runtime.fish.done then
        if placeId == FARM_PLACEID or placeId == FISH_PLACEID then
            player:Kick("🎉 Đã xong cả Farm & Fishing 30p, nghỉ thôi!")
        end
        return
    end

    if placeId == FARM_PLACEID then
        if not runtime.farm.done then
            runtime.farm.last = os.time() -- 🔥 Reset khi detect đang ở Farm
            trackFarm()
        elseif not runtime.fish.done then
            teleportToFishing()
        end

    elseif placeId == FISH_PLACEID then
        if not runtime.fish.done then
            runtime.fish.last = os.time() -- 🔥 Reset khi detect đang ở Fishing
            trackFishing()
        elseif not runtime.farm.done then
            teleportToFarm()
        end

    else
        if not runtime.farm.done then
            teleportToFarm()
        elseif not runtime.fish.done then
            teleportToFishing()
        end
    end
end
main()
