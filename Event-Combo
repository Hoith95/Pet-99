-- ‚úÖ Combo Event Script + GUI Progress - Heo Edition

if _G.COMBO_EVENT then
    warn("‚õî Script ƒë√£ ch·∫°y tr∆∞·ªõc ƒë√≥!")
    return
end
_G.COMBO_EVENT = true

-- ‚öôÔ∏è Service & Data
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

local Save = require(ReplicatedStorage.Library.Client.Save)

-- üó∫Ô∏è Map IDs
local FARM_PLACEID = 119454325063278
local FISH_PLACEID = 95635359880599

-- ‚è±Ô∏è Th·ªùi gian y√™u c·∫ßu (30 ph√∫t m·ªói event)
local REQUIRED_SECONDS = 30 * 60

-- üìÇ Data runtime
local HttpService = game:GetService("HttpService")
local runtime = {
    farm = { total = 0, last = os.time(), done = false },
    fish = { total = 0, last = os.time(), done = false },
    lastDay = os.date("%d/%m/%Y"),
}

-- üõ†Ô∏è Load/Save v√†o local file
local function getFileName()
    return "comboEventLog.json"
end

local function loadData()
    if isfile(getFileName()) then
        local ok, data = pcall(function()
            return HttpService:JSONDecode(readfile(getFileName()))
        end)
        if ok and data then runtime = data end
    end
end

local function saveData()
    runtime.lastDay = os.date("%d/%m/%Y")
    writefile(getFileName(), HttpService:JSONEncode(runtime))
end

-- üîÑ Reset theo ng√†y
local function resetIfNewDay()
    local today = os.date("%d/%m/%Y")
    if runtime.lastDay ~= today then
        runtime = {
            farm = { total = 0, last = os.time(), done = false },
            fish = { total = 0, last = os.time(), done = false },
            lastDay = today,
        }
        saveData()
    end
end

-- üìä Time tracking
local function updateProgress(which)
    local now = os.time()
    local data = runtime[which]
    data.total = data.total + (now - data.last)
    data.last = now
    if data.total >= REQUIRED_SECONDS then
        data.done = true
    end
    saveData()
end

-- GUI t·∫°o ·ªü g√≥c ph·∫£i d∆∞·ªõi
local function createGUI()
    if PlayerGui:FindFirstChild("EventProgressUI") then
        PlayerGui.EventProgressUI:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "EventProgressUI"
    screenGui.Parent = PlayerGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 220, 0, 70)
    frame.Position = UDim2.new(1, -230, 1, -80)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    frame.BackgroundTransparency = 0.3
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    local uiCorner = Instance.new("UICorner", frame)
    uiCorner.CornerRadius = UDim.new(0, 12)

    local farmLabel = Instance.new("TextLabel")
    farmLabel.Size = UDim2.new(1, -10, 0, 30)
    farmLabel.Position = UDim2.new(0, 5, 0, 5)
    farmLabel.BackgroundTransparency = 1
    farmLabel.TextColor3 = Color3.fromRGB(200, 255, 200)
    farmLabel.TextXAlignment = Enum.TextXAlignment.Left
    farmLabel.Font = Enum.Font.SourceSansBold
    farmLabel.TextSize = 18
    farmLabel.Text = "Farm: 0%"
    farmLabel.Parent = frame

    local fishLabel = Instance.new("TextLabel")
    fishLabel.Size = UDim2.new(1, -10, 0, 30)
    fishLabel.Position = UDim2.new(0, 5, 0, 35)
    fishLabel.BackgroundTransparency = 1
    fishLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
    fishLabel.TextXAlignment = Enum.TextXAlignment.Left
    fishLabel.Font = Enum.Font.SourceSansBold
    fishLabel.TextSize = 18
    fishLabel.Text = "Fishing: 0%"
    fishLabel.Parent = frame

    -- Update loop
    spawn(function()
        while screenGui.Parent do
            local farmPct = math.min(100, math.floor((runtime.farm.total / REQUIRED_SECONDS) * 100))
            local fishPct = math.min(100, math.floor((runtime.fish.total / REQUIRED_SECONDS) * 100))

            farmLabel.Text = string.format("Farm: %d%%", farmPct)
            fishLabel.Text = string.format("Fishing: %d%%", fishPct)

            if runtime.farm.done then
                farmLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            end
            if runtime.fish.done then
                fishLabel.TextColor3 = Color3.fromRGB(100, 100, 255)
            end

            wait(1)
        end
    end)
end

-- ‚è≥ Tracker Farm
local function trackFarm()
    spawn(function()
        while not runtime.farm.done do
            updateProgress("farm")
            wait(10)
        end
    end)
end

-- üé£ Tracker Fishing
local function trackFishing()
    spawn(function()
        while not runtime.fish.done do
            updateProgress("fish")
            wait(10)
        end
    end)
end

-- üß≠ Smart Teleport
local function teleportToFarm()
    local tp = workspace.__THINGS.Instances.FarmingWorld.Teleports:GetChildren()[5]
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if tp and hrp then
        hrp.CFrame = tp.CFrame
    else
        TeleportService:Teleport(FARM_PLACEID, player)
    end
end

local function teleportToFishing()
    local tp = workspace.__THINGS.Instances.FishingEvent.Teleports.Enter
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if tp and hrp then
        hrp.CFrame = tp.CFrame
    else
        TeleportService:Teleport(FISH_PLACEID, player)
    end
end

-- üïí Time Trial Checker
local function getRunsUsed()
    local saveData = Save.Get()
    return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function waitUntilMaxRuns()
    while true do
        local used = getRunsUsed()
        if used >= 10 then
            break
        else
            wait(300)
        end
    end
end

-- üö¶ Main Controller
local function main()
    loadData()
    resetIfNewDay()
    createGUI()
    waitUntilMaxRuns()

    local placeId = game.PlaceId

    -- N·∫øu ƒë√£ ƒë·ªß c·∫£ farm & fishing
    if runtime.farm.done and runtime.fish.done then
        if placeId == FARM_PLACEID or placeId == FISH_PLACEID then
            player:Kick("üéâ ƒê√£ xong c·∫£ Farm & Fishing 30p, ngh·ªâ th√¥i!")
        end
        return
    end

    if placeId == FARM_PLACEID then
        if not runtime.farm.done then
            trackFarm()
        elseif not runtime.fish.done then
            teleportToFishing()
        end

    elseif placeId == FISH_PLACEID then
        if not runtime.fish.done then
            trackFishing()
        elseif not runtime.farm.done then
            teleportToFarm()
        end

    else
        if not runtime.farm.done then
            teleportToFarm()
        elseif not runtime.fish.done then
            teleportToFishing()
        end
    end
end

main()
