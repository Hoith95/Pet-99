-- Yêu cầu các module cần thiết từ ReplicatedStorage để sử dụng trong script.
local DaycareCmds = require(game.ReplicatedStorage.Library.Client.DaycareCmds)
local SaveModule = require(game.ReplicatedStorage.Library.Client.Save)

-- Định nghĩa hàm kiểm tra xem có pet nào trong daycare không.
local function petInDaycare()
    return next(DaycareCmds.GetActive()) ~= nil
end

-- Định nghĩa hàm lấy thời gian còn lại được tăng tốc của pet trong daycare.
local function getAcceleratedRemainingTime()
    local remainingTime = 0
    -- Duyệt qua danh sách pet đang hoạt động trong daycare.
    for petId, _ in pairs(DaycareCmds.GetActive()) do
        -- Tính toán thời gian còn lại cho mỗi pet.
        local time = DaycareCmds.ComputeRemainingTime(petId)
        -- Lấy thời gian lớn nhất.
        if time > remainingTime then
            remainingTime = time
        end
    end
    -- Chia thời gian còn lại cho 3 để tăng tốc độ.
    return remainingTime / 3
end

-- Định nghĩa hàm định dạng thời gian từ giây sang giờ:phút:giây.
local function formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local seconds = seconds % 60
    return string.format("%02d:%02d:%02d", hours, minutes, seconds)
end

-- Lấy PlayerGui của người chơi hiện tại.
local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
-- Tạo một ScreenGui mới để hiển thị thông báo.
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NotificationGui"
screenGui.Parent = playerGui

-- Tạo một Frame làm nền cho các thông báo.
local backgroundFrame = Instance.new("Frame")
backgroundFrame.Size = UDim2.new(1, 0, 1, 0)
backgroundFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36) -- Màu nền tối hơn cho độ tương phản cao
backgroundFrame.BackgroundTransparency = 0.1 -- Giảm độ trong suốt để nền đậm hơn
backgroundFrame.Parent = screenGui

-- Tạo một TextLabel để hiển thị thời gian còn lại.
local timeLabel = Instance.new("TextLabel", backgroundFrame)
timeLabel.Name = "TimeLabel"
timeLabel.Size = UDim2.new(1, 0, 1/3, 0)
timeLabel.Position = UDim2.new(0, 0, 0, 0)
timeLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 45) -- Màu nền nhẹ hơn cho timeLabel
timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timeLabel.BorderSizePixel = 0
timeLabel.TextScaled = true

-- Tạo một TextLabel khác để hiển thị thông báo về số lượng Huge pet.
local hugeLabel = Instance.new("TextLabel", backgroundFrame)
hugeLabel.Name = "HugeLabel"
hugeLabel.Text = "Éo Được Huge nào."
hugeLabel.Size = UDim2.new(1, 0, 1/3, 0)
hugeLabel.Position = UDim2.new(0, 0, 1/3, 0)
hugeLabel.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Màu tím cho hugeLabel
hugeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
hugeLabel.BorderSizePixel = 0
hugeLabel.TextScaled = true

-- Tạo một TextLabel nữa để hiển thị số lượng Diamonds.
local diamondLabel = Instance.new("TextLabel", backgroundFrame)
diamondLabel.Name = "DiamondLabel"
diamondLabel.Text = "Đang cập nhật Diamonds..."
diamondLabel.Size = UDim2.new(1, 0, 1/3, 0)
diamondLabel.Position = UDim2.new(0, 0, 2/3, 0)
diamondLabel.BackgroundColor3 = Color3.fromRGB(0, 120, 215) -- Màu xanh coban cho diamondLabel
diamondLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
diamondLabel.BorderSizePixel = 0
diamondLabel.TextScaled = true

-- Định nghĩa hàm cập nhật thông báo số lượng Huge pet.
local function updateHugeNotification(hugeCount)
    hugeLabel.Text = "Húp Được " .. hugeCount .. " HUGE"
    -- Thay đổi màu nền dựa trên số lượng Huge pet.
    hugeLabel.BackgroundColor3 = hugeCount == 0 and Color3.fromRGB(128, 0, 128) or Color3.fromRGB(0, 128, 0)
end

-- Định nghĩa hàm cập nhật thông báo số lượng Diamonds.
local function updateDiamondNotification(diamondCount)
    diamondLabel.Text = "Có " .. diamondCount .. " Gems!"
end

-- Khởi tạo biến để theo dõi thời gian cập nhật cuối cùng.
local lastHugeUpdateTime = 0
local lastDiamondUpdateTime = 0

-- Tạo một luồng mới để cập nhật thông báo.
task.spawn(function()
    while true do
        local currentTime = os.time()
        -- Kiểm tra và cập nhật thông báo Huge pet mỗi 30 giây.
        if currentTime >= lastHugeUpdateTime + 30 then
            TotalHuge = 0
            local result = SaveModule.Get()
            local pets = result.Inventory.Pet
            -- Đếm số lượng Huge pet.
            for _, pet in pairs(pets) do
                if string.match(pet.id,"Huge") then
                    TotalHuge = TotalHuge + 1
                end
            end
            updateHugeNotification(TotalHuge)
            lastHugeUpdateTime = currentTime
        end
        -- Kiểm tra và cập nhật thông báo Diamonds mỗi 30 giây.
        if currentTime >= lastDiamondUpdateTime + 30 then
            updateDiamondNotification(game.Players.LocalPlayer.leaderstats["\240\159\146\142 Diamonds"].Value)
            lastDiamondUpdateTime = currentTime
        end
        -- Đợi 5 giây trước khi kiểm tra lại.
        task.wait(5)
    end
end)

-- Khởi tạo luồng để cập nhật thời gian daycare.
task.spawn(function()
    while true do
        -- Kiểm tra và cập nhật thời gian nếu có pet trong daycare.
        if petInDaycare() then
            local acceleratedTime = getAcceleratedRemainingTime()
            -- Thoát vòng lặp nếu hết thời gian.
            if acceleratedTime <= 0 then
                -- Thực hiện hành động khi thời gian kết thúc
                print("Thời gian đã hết, bắt đầu thực hiện Hop Server mới.")
                loadstring(game:HttpGet("https://raw.githubusercontent.com/Hoith95/Pet-99/main/ServerHop"))()
                break -- Dừng vòng lặp khi thời gian đã hết
            else
                -- Cập nhật thời gian còn lại trên GUI.
                timeLabel.Text = "Thời gian còn lại: " .. formatTime(acceleratedTime)
            end
        else
            -- Cập nhật GUI nếu không có pet trong daycare.
            timeLabel.Text = "Không có pet nào trong daycare."
            -- Thực hiện hành động khác khi không có pet trong daycare
            print("Không có pet nào trong daycare, bắt đầu thực hiện Hop Server mới.")
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Hoith95/Pet-99/main/ServerHop"))()
            break -- Dừng vòng lặp sau khi thực hiện script khác
        end
        -- Đợi 1 giây trước khi kiểm tra lại.
        task.wait(1)
    end
end)
task.wait(1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Hoith95/Pet-99/main/AntiAFK"))()
