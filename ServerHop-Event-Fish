local PLACE_ID = 95635359880599
local MAX_RETRIES = 15
local WAIT_BEFORE_RECHECK = 15

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- ✅ Kiểm tra số lượng người chơi hiện tại (có fallback nếu GetPlayers() lỗi)
local function isPlayerCountValid()
    local count
    local success, result = pcall(function()
        return #Players:GetPlayers()
    end)

    if success and result then
        count = result
    else
        -- Fallback: đếm số lượng Player từ Players:GetChildren()
        local tempCount = 0
        for _, player in ipairs(Players:GetChildren()) do
            if player:IsA("Player") then
                tempCount += 1
            end
        end
        count = tempCount
        warn("⚠️ Fallback GetPlayers(): số lượng đếm được:", count)
    end

    print("👥 Số lượng người chơi hiện tại:", count)
    return count >= 2 and count <= 5
end

-- ✅ Hop server đến server ít người (từ server thứ 3 trở đi)
local function teleportToLeastPopulatedServer(placeId, runScriptOnJoin, retryLimit)
    retryLimit = retryLimit or MAX_RETRIES
    local attempts = 0

    while attempts < retryLimit do
        attempts += 1
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. placeId .. '/servers/Public?sortOrder=Asc&limit=50&excludeFullServers=true')).data
        end)

        if success and result and #result > 2 then
            local validServers = {}
            for _, server in ipairs(result) do
                if server.playing > 0 and server.playing < server.maxPlayers then
                    table.insert(validServers, server)
                end
            end

            if #validServers > 2 then
                table.sort(validServers, function(a, b)
                    return a.playing < b.playing
                end)

                local selectedServer = validServers[3]
                local teleportData = runScriptOnJoin and "RUNSCRIPT" or "NOSCRIPT"

                local teleportSuccess, teleportErr = pcall(function()
                    TeleportService:TeleportToPlaceInstance(placeId, selectedServer.id, LocalPlayer, { customData = teleportData })
                end)

                if teleportSuccess then
                    print("✅ Teleport thành công đến server:", selectedServer.id)
                    return true
                else
                    warn("⚠️ Teleport thất bại (Lần " .. attempts .. "): " .. tostring(teleportErr))
                end
            else
                warn("Không đủ server hợp lệ (cần tối thiểu 3 server).")
            end
        else
            warn("❌ Không thể lấy danh sách server (lần " .. attempts .. ")")
        end

        task.wait(5)
    end

    warn("⛔ Teleport thất bại sau " .. retryLimit .. " lần thử!")
    return false
end

-- ✅ Kiểm tra nếu player vừa được teleport từ nơi khác
local tpInfo = TeleportService:GetLocalPlayerTeleportData()
local resumedFromTeleport = tpInfo and tpInfo.customData

-- 🟡 Nếu vừa từ lần teleport đầu tiên sang:
if resumedFromTeleport == "NOSCRIPT" then
    print("🔁 Vừa teleport lần 1 sang, chờ 15s rồi kiểm tra số lượng người chơi...")
    task.wait(WAIT_BEFORE_RECHECK)
    if isPlayerCountValid() then
        print("✅ Số lượng người chơi phù hợp sau lần hop đầu. Dừng script.")
        return
    else
        print("🔁 Tiếp tục hop lần 2, lần này sẽ chạy script sau khi vào.")
        teleportToLeastPopulatedServer(PLACE_ID, true)
        return
    end
end

-- 🟢 Nếu vừa từ lần teleport thứ 2 sang:
if resumedFromTeleport == "RUNSCRIPT" then
    print("✅ Đã hop lần 2. Tiến hành load script.")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Hoith95/Pet-99/main/WaitForGameLoad"))()
    return
end

-- 🔵 Nếu là lần chạy đầu tiên
if isPlayerCountValid() then
    print("✅ Server hiện tại đã phù hợp, không cần hop.")
    return
else
    print("❌ Server không phù hợp. Bắt đầu hop lần đầu...")
    teleportToLeastPopulatedServer(PLACE_ID, false)
end
