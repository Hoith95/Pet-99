if _G.VAR_TIME_TRIAL then
	warn("Script ƒë√£ ƒë∆∞·ª£c ch·∫°y tr∆∞·ªõc ƒë√≥!")
	return
end
_G.VAR_TIME_TRIAL = true

-- Kh·ªüi t·∫°o GUI Time Trial
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Save = require(game.ReplicatedStorage.Library.Client.Save)

-- X√≥a GUI c≈© n·∫øu c√≥
local playerGui = player:WaitForChild("PlayerGui")
local oldGui = playerGui:FindFirstChild("TimeTrialGui")
if oldGui then oldGui:Destroy() end

-- H√†m l·∫•y th√¥ng tin
local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and saveData.TimeTrialStats.DailyRuns or 0
end

local function getRunsLeft()
	local used = getRunsUsed()
	return math.max(0, 10 - used)
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats and type(saveData.TimeTrialStats.Points) == "number" then
		return saveData.TimeTrialStats.Points
	end
	return 0
end

-- Giao di·ªán
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TimeTrialGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local function createLabel(name, pos, anchor, bg)
	local lbl = Instance.new("TextLabel")
	lbl.Name = name
	lbl.AnchorPoint = anchor or Vector2.new(0, 0)
	lbl.Position = pos
	lbl.Size = UDim2.new(0, 0, 0, 38)
	lbl.BackgroundColor3 = bg
	lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 32
	lbl.Text = "..."
	lbl.BackgroundTransparency = 0
	lbl.BorderSizePixel = 0
	lbl.TextXAlignment = Enum.TextXAlignment.Center
	lbl.Parent = screenGui
	return lbl
end

local pointsLabel = createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = createLabel("TimeTrialLabel", UDim2.new(0.5, 25, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

task.spawn(function()
	while true do
		pointsLabel.Text = "ƒêi·ªÉm: " .. tostring(getTimeTrialPoints())
		updateLabelSize(pointsLabel)

		timeTrialLabel.Text = "Time Trial: " .. tostring(getRunsLeft()) .. " / 10"
		updateLabelSize(timeTrialLabel)

		task.wait(10)
	end
end)

-- Stuck monitor
local _stuckRetries = 0
local stuckThread = nil
local function stopMonitorStuck()
	if stuckThread then task.cancel(stuckThread) stuckThread = nil end
end

local function startMonitorStuck(onStuck)
	if stuckThread then task.cancel(stuckThread) end
	stuckThread = task.spawn(function()
		local lastPos, count = nil, 0
		while true do
			local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			if not hrp then task.wait(1) continue end
			local pos = hrp.Position
			if lastPos and (pos - lastPos).Magnitude < 0.5 then
				count += 1
				if count >= 60 then
					stopMonitorStuck()
					_stuckRetries += 1
					warn("‚ö†Ô∏è ƒê·ª©ng y√™n 60s ‚Üí x·ª≠ l√Ω retry l·∫ßn " .. _stuckRetries)
					if _stuckRetries >= 3 then
						player:Kick("ƒê·ª©ng y√™n qu√° 60s trong Time Trial (3 l·∫ßn retry)")
					else
						local leave = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave
						if leave then
							player.Character:WaitForChild("HumanoidRootPart").CFrame = leave.CFrame + Vector3.new(0, 5, 0)
							task.wait(15)
							onStuck()
						end
					end
					break
				end
			else
				count = 0
				lastPos = pos
			end
			task.wait(1)
		end
	end)
end
local function RunTimeTrialScript()
	task.spawn(function()
		if game.PlaceId ~= 140403681187145 then return end

		local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)
		local BreakablesFolder = workspace.__THINGS.Breakables
		local EnterTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
		local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

		local function teleportTo(part)
			local char = player.Character or player.CharacterAdded:Wait()
			if char and part and part.CFrame and char:FindFirstChild("HumanoidRootPart") then
				char.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
			end
		end

		local function isValidBreakable(obj)
			return obj:IsA("Model") and tonumber(obj.Name)
		end

		local function getBreakables()
			local list = {}
			for _, b in ipairs(BreakablesFolder:GetChildren()) do
				if isValidBreakable(b) then table.insert(list, b.Name) end
			end
			return list
		end

		local function waitBreakGone(name)
			while BreakablesFolder:FindFirstChild(name) do task.wait(0.1) end
		end

		local function teleportFarm()
			while true do
				local bks = getBreakables()
				if #bks > 0 then
					for _, name in ipairs(bks) do
						local b = BreakablesFolder:FindFirstChild(name)
						local p = b and b:FindFirstChildWhichIsA("BasePart")
						if p then teleportTo(p) waitBreakGone(name) end
					end
				else
					local startRuns = getRunsUsed()
					local found = false
					for i = 1, 20 do
						task.wait(1)
						if #getBreakables() > 0 then found = true break end
						if getRunsUsed() > startRuns then
							warn("‚úÖ ƒê√£ tƒÉng l∆∞·ª£t ‚áí ho√†n th√†nh Time Trial ngay!")
							if LeaveTeleport then
								teleportTo(LeaveTeleport)
								task.wait(5)
								wasTeleportedOut = true
							end
							return
						end
					end
					if not found then
						if LeaveTeleport then
							teleportTo(LeaveTeleport)
							task.wait(5)
							wasTeleportedOut = true
						end
						break
					end
				end
				task.wait(0.5)
			end
		end

		local savedPosition = nil
		local wasTeleportedOut = false

		local _, maxZoneData = ZoneCmds.GetMaxOwnedZone()
		local requiredZone = maxZoneData and maxZoneData.ZoneNumber or 0
		while true do
			local _, zoneData = ZoneCmds.GetMaxOwnedZone()
			if zoneData and zoneData.ZoneNumber >= requiredZone then break end
			task.wait(5)
		end

		-- Theo d√µi 12 ph√∫t kh√¥ng tƒÉng l∆∞·ª£t (sau khi ƒë√£ c√≥ ƒëi·ªÉm)
		task.spawn(function()
			while getTimeTrialPoints() <= 0 do
				print("‚è≥ Ch∆∞a c√≥ ƒëi·ªÉm ‚Üí ch∆∞a b·∫Øt ƒë·∫ßu ƒë·∫øm 12 ph√∫t.")
				task.wait(10)
			end
			local lastRuns = getRunsUsed()
			while lastRuns < 10 do
				local start = lastRuns
				local elapsed = 0
				while elapsed < 686 do
					task.wait(10)
					elapsed += 10
					lastRuns = getRunsUsed()
					if lastRuns >= 10 then return end
					if lastRuns > start then break end
				end
				if lastRuns == start then
					player:Kick("‚è∞ 12 ph√∫t kh√¥ng tƒÉng l∆∞·ª£t Time Trial.")
					return
				end
			end
		end)

		while true do
			local used = getRunsUsed()
			if used >= 10 then break end

			warn("‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu l∆∞·ª£t " .. used)
			local char = player.Character or player.CharacterAdded:Wait()
			savedPosition = char:FindFirstChild("HumanoidRootPart") and char.HumanoidRootPart.CFrame

			teleportTo(EnterTeleport)
			task.wait(5)
			wasTeleportedOut = false

			startMonitorStuck(function()
				stopMonitorStuck()
				if LeaveTeleport then teleportTo(LeaveTeleport) end
				task.wait(15)
				if EnterTeleport then teleportTo(EnterTeleport) end
				task.wait(3)
				startMonitorStuck(function() end)
				teleportFarm()
				stopMonitorStuck()
			end)

			teleportFarm()
			stopMonitorStuck()
			task.wait(5)

			if LeaveTeleport then
				teleportTo(LeaveTeleport)
				task.wait(3)
				wasTeleportedOut = true
			end

			if savedPosition and not wasTeleportedOut then
				local fake = Instance.new("Part")
				fake.Anchored = true
				fake.CFrame = savedPosition
				fake.Transparency = 1
				fake.CanCollide = false
				fake.Parent = workspace
				teleportTo(fake)
				task.delay(1, function() fake:Destroy() end)
				warn("üîô Quay v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu")
			end

			task.wait(15)
		end

		-- Ch·ªù DailyRuns reset ƒë·ªÉ ch·∫°y l·∫°i
		task.spawn(function()
			while true do
				task.wait(300)
				if getRunsUsed() < 10 then
					_G.VAR_TIME_TRIAL = nil
					RunTimeTrialScript()
					break
				end
			end
		end)
	end)
end

RunTimeTrialScript()
