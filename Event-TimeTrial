if _G.VAR_TIME_TRIAL then
	warn("⛔ Script đã được chạy trước đó!")
	return
end

_G.VAR_TIME_TRIAL = true

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local Save = require(game.ReplicatedStorage.Library.Client.Save)
local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)

local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function getRunsLeft()
	return 10 - getRunsUsed()
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.Points or 0) or 0
end

local function getTotalRuns()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0
end

-- GUI
local screenGui = playerGui:FindFirstChild("TimeTrialGui")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TimeTrialGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui
end

local notifyLabel = screenGui:FindFirstChild("NotifyLabel")
if not notifyLabel then
	notifyLabel = Instance.new("TextLabel")
	notifyLabel.Name = "NotifyLabel"
	notifyLabel.Size = UDim2.new(1, 0, 1, 0)
	notifyLabel.Position = UDim2.new(0, 0, 0, 0)
	notifyLabel.BackgroundTransparency = 0.4
	notifyLabel.TextColor3 = Color3.new(1, 1, 1)
	notifyLabel.TextScaled = true
	notifyLabel.TextWrapped = true
	notifyLabel.Font = Enum.Font.GothamBold
	notifyLabel.Text = ""
	notifyLabel.ZIndex = 100
	notifyLabel.Visible = false
	notifyLabel.Parent = screenGui
end

local notifyColor = {
	info = Color3.fromRGB(0, 128, 255),
	success = Color3.fromRGB(0, 200, 0),
	warning = Color3.fromRGB(255, 170, 0),
	error = Color3.fromRGB(255, 0, 0),
}

local function notify(message, msgType)
	msgType = msgType or "info"
	notifyLabel.BackgroundColor3 = notifyColor[msgType] or Color3.fromRGB(0, 128, 255)
	notifyLabel.Text = "⚠️ " .. message
	notifyLabel.Visible = true
end

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Text = "..."
	label.Parent = screenGui
	return label
end

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local pointsLabel = screenGui:FindFirstChild("PointsLabel") or createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = screenGui:FindFirstChild("TimeTrialLabel") or createLabel("TimeTrialLabel", UDim2.new(0.5, 30, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

task.spawn(function()
	while true do
		pointsLabel.Text = "Điểm: " .. tostring(getTimeTrialPoints())
		updateLabelSize(pointsLabel)
		timeTrialLabel.Text = "Time Trial: " .. tostring(getRunsLeft()) .. "/10"
		updateLabelSize(timeTrialLabel)
		task.wait(10)
	end
end)

notify("🟢 Script Time Trial khởi động", "info")

-- Chờ đạt zone tối đa
local function getMaxZoneFromMap4()
	local mapFolder = workspace:FindFirstChild("Map4")
	if not mapFolder then
		warn("❌ Không tìm thấy Map4 trong workspace.")
		notify("❌ Không tìm thấy Map4", "error")
		return 0
	end
	local maxZone = 0
	for _, folder in ipairs(mapFolder:GetChildren()) do
		if folder:IsA("Folder") then
			local zoneNumber = tonumber(folder.Name:match("^(%d+)"))
			if zoneNumber and zoneNumber > maxZone then
				maxZone = zoneNumber
			end
		end
	end
	return maxZone
end

local function waitUntilReachMaxZone()
	local maxMapZone = getMaxZoneFromMap4()
	while true do
		local _, data = ZoneCmds.GetMaxOwnedZone()
		local current = data and data.ZoneNumber or 0
		if current >= maxMapZone then
			warn("✅ Đã đạt Zone tối đa (" .. tostring(current) .. ")")
			notify("✅ Đã đạt Zone tối đa", "success")
			break
		end
		notify("⏳ Chưa đạt Zone tối đa (" .. tostring(current) .. "/" .. tostring(maxMapZone) .. "), đợi 60s...", "warning")
		task.wait(60)
	end
end

waitUntilReachMaxZone()

-- Theo dõi 12 phút không đổi lượt hoặc tổng Time Trial
local monitor12minThread
local function startMonitor12Min()
	monitor12minThread = task.spawn(function()
		while true do
			local startUsed = getRunsUsed()
			local startTotal = getTotalRuns()
			local t = 0
			notify("⏱️ Bắt đầu theo dõi 12 phút không đổi...", "info")

			while t < 720 do
				task.wait(10)
				t += 10
				if getRunsUsed() ~= startUsed or getTotalRuns() ~= startTotal then
					notify("🔁 Có thay đổi lượt hoặc tổng Time Trial, reset theo dõi.", "info")
					break
				end
			end

			if getRunsUsed() == startUsed and getTotalRuns() == startTotal then
				notify("🛑 12 phút không đổi → kick khỏi game", "error")
				player:Kick("⏰ 12 phút không thay đổi lượt hoặc tổng Time Trial → nghi ngờ treo máy.")
				return
			end
		end
	end)
end

startMonitor12Min()
-- Teleport tiện lợi
local function teleportTo(part)
	local character = player.Character or player.CharacterAdded:Wait()
	if character and character:FindFirstChild("HumanoidRootPart") and part and part.CFrame then
		character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
	end
end

local function safeTeleportOut()
	notify("🚪 Teleport ra khỏi Time Trial", "warning")
	teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Leave)
	task.wait(9)
end

-- Luồng kiểm tra lag
local lagMonitorThread
local function startLagMonitor()
	lagMonitorThread = task.spawn(function()
		local retryCount = 0
		local lastPosition = nil
		while true do
			local character = player.Character or player.CharacterAdded:Wait()
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if not hrp then task.wait(5) continue end

			lastPosition = hrp.Position
			task.wait(30)
			local currentPos = hrp.Position
			if (lastPosition - currentPos).Magnitude < 1 then
				retryCount += 1
				warn("⚠️ Đứng im " .. retryCount .. " lần")
				notify("⚠️ Đứng im lần " .. retryCount, "warning")
				if retryCount <= 3 then
					safeTeleportOut()
					return
				else
					notify("🛑 Lag quá lâu, bị kick khỏi game", "error")
					player:Kick("Lag quá lâu trong Time Trial.")
					return
				end
			else
				retryCount = 0
			end
			task.wait(5)
		end
	end)
end

-- Farm vòng 1 lượt
local function teleportFarmLoop(startPoints, startRuns)
	notify("🚀 Bắt đầu farm Time Trial", "info")

	while true do
		local names = {}
		for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
			if c:IsA("Model") and tonumber(c.Name) then
				table.insert(names, c.Name)
			end
		end

		if #names > 0 then
			for _, n in ipairs(names) do
				local b = workspace.__THINGS.Breakables:FindFirstChild(n)
				if b then
					local p = b:FindFirstChildWhichIsA("BasePart")
					if p then
						teleportTo(p)
						while workspace.__THINGS.Breakables:FindFirstChild(n) do
							task.wait(0.1)
						end
					end
				end
			end
		else
			warn("🔍 Hết rương, kiểm tra Điểm hoặc TotalRuns...")
			notify("🔍 Hết rương, đang kiểm tra tiến trình...", "info")
			local success = false
			for i = 1, 30 do
				task.wait(0.1)
				if getTimeTrialPoints() > startPoints or getTotalRuns() > startRuns then
					success = true
					break
				end
			end

			if success then
				notify("✅ Điểm hoặc Tổng lượt tăng → Thoát", "success")
				warn("✅ Điểm hoặc TotalRuns tăng → Thoát Time Trial")
				safeTeleportOut()
				return
			end

			notify("⏳ Không có thay đổi trong 3s, chờ 20s tiếp", "warning")
			local foundChest = false
			for i = 1, 200 do
				task.wait(0.1)
				local check = {}
				for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
					if c:IsA("Model") and tonumber(c.Name) then
						table.insert(check, c.Name)
					end
				end
				if #check > 0 then
					foundChest = true
					break
				end
			end

			if foundChest then
				notify("📦 Rương xuất hiện lại, tiếp tục farm", "info")
			else
				notify("❌ Hết rương và không có thay đổi, kết thúc lượt", "error")
				warn("❌ Hết rương và không có thay đổi, kết thúc lượt")
				safeTeleportOut()
				return
			end
		end
		task.wait(0.1)
	end
end

-- Vòng chạy 10 lượt
function RunTimeTrialScript()
	task.spawn(function()
		if game.PlaceId ~= 140403681187145 then return end

		while getRunsUsed() < 10 do
			local used = getRunsUsed()
			local startPoints = getTimeTrialPoints()
			local startRuns = getTotalRuns()

			warn("🔁 Bắt đầu lượt: " .. tostring(used))
			notify("🔁 Bắt đầu lượt: " .. tostring(used), "info")

			teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
			task.wait(3)

			local waitTime = 0
			while #workspace.__THINGS.Breakables:GetChildren() == 0 and waitTime < 5 do
				task.wait(0.1)
				waitTime += 0.1
			end

			startLagMonitor()
			teleportFarmLoop(startPoints, startRuns)
			task.wait(5)

			if lagMonitorThread then
				pcall(function()
					task.cancel(lagMonitorThread)
				end)
				lagMonitorThread = nil
			end
		end

		warn("🎉 Hoàn tất Time Trial hoặc đủ 10 lượt")
		notify("🎉 Đã hoàn tất 10 lượt Time Trial", "success")

		if monitor12minThread then
			pcall(function()
				task.cancel(monitor12minThread)
			end)
			monitor12minThread = nil
			warn("🛑 Dừng theo dõi 12 phút không đổi lượt.")
		end

		-- Theo dõi reset DailyRuns
		task.spawn(function()
			while true do
				task.wait(300)
				if getRunsUsed() < 10 then
					warn("🔁 DailyRuns reset → restart")
					notify("🔁 DailyRuns reset → Restart Time Trial", "info")
					_G.VAR_TIME_TRIAL = nil
					startMonitor12Min()
					RunTimeTrialScript()
					return
				end
			end
		end)
	end)
end

RunTimeTrialScript()
