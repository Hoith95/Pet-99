if _G.VAR_TIME_TRIAL then
	warn("Script ƒë√£ ƒë∆∞·ª£c ch·∫°y tr∆∞·ªõc ƒë√≥!")
	return
end

_G.VAR_TIME_TRIAL = true

-- Kh·ªüi t·∫°o GUI Time Trial
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Save = require(game.ReplicatedStorage.Library.Client.Save)

-- X√≥a GUI c≈© n·∫øu ƒë√£ t·ªìn t·∫°i
local playerGui = player:WaitForChild("PlayerGui")
local oldGui = playerGui:FindFirstChild("TimeTrialGui")
if oldGui then oldGui:Destroy() end

-- H√†m l·∫•y l∆∞·ª£t c√≤n l·∫°i
local function getRunsLeft()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats then
		local usedRuns = saveData.TimeTrialStats.DailyRuns or 0
		return math.max(0, 10 - usedRuns)
	end
	return 0
end

-- H√†m l·∫•y t·ªïng l∆∞·ª£t ƒë√£ d√πng
local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and saveData.TimeTrialStats.DailyRuns or 0
end

-- H√†m l·∫•y s·ªë ƒëi·ªÉm Time Trial
local function getTimeTrialPoints()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats and type(saveData.TimeTrialStats.Points) == "number" then
		return saveData.TimeTrialStats.Points
	end
	return 0
end

-- T·∫°o GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TimeTrialGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor or Vector2.new(0, 0)
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.Text = "..."
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Parent = screenGui
	return label
end

-- üß≠ T·∫°o label: Points (tr√°i tr√™n), TimeTrial (gi·ªØa tr√™n)
local pointsLabel = createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = createLabel("TimeTrialLabel", UDim2.new(0.5, 25, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

-- C·∫≠p nh·∫≠t k√≠ch th∆∞·ªõc theo text
local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

-- C·∫≠p nh·∫≠t GUI m·ªói 10 gi√¢y
task.spawn(function()
	while true do
		local runsLeft = getRunsLeft()
		local points = getTimeTrialPoints()

		pointsLabel.Text = "ƒêi·ªÉm: " .. tostring(points)
		updateLabelSize(pointsLabel)

		timeTrialLabel.Text = "Time Trial: " .. tostring(runsLeft) .. " / 10"
		updateLabelSize(timeTrialLabel)

		task.wait(10)
	end
end)
-- Bi·∫øn retry n·∫øu b·ªã stuck
local _stuckRetries = 0
local stuckMonitorThreadId = nil

-- üëÅÔ∏è‚Äçüó®Ô∏è Theo d√µi ƒë·ª©ng y√™n
local function startMonitorStuck(onStuckCallback)
	local currentThreadId = tick()
	stuckMonitorThreadId = currentThreadId

	task.spawn(function()
		local stationarySeconds = 0
		local lastPosition = nil

		while stuckMonitorThreadId == currentThreadId do
			local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			if not hrp then task.wait(1) continue end

			local currentPosition = hrp.Position
			if lastPosition and (currentPosition - lastPosition).Magnitude < 0.5 then
				stationarySeconds += 1
				if stationarySeconds >= 60 then
					warn("‚ö†Ô∏è Nh√¢n v·∫≠t ƒë·ª©ng y√™n t·∫°i 1 v·ªã tr√≠ 60s ‚áí x·ª≠ l√Ω stuck l·∫ßn th·ª© " .. tostring(_stuckRetries + 1))
					stuckMonitorThreadId = nil

					_stuckRetries += 1
					if _stuckRetries >= 3 then
						player:Kick("ƒê·ª©ng y√™n qu√° 60s trong Time Trial (ƒë√£ th·ª≠ l·∫°i 3 l·∫ßn)")
					else
						local leaveTp = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave
						local enterTp = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
						if leaveTp and enterTp then
							local function teleportTo(part)
								if part and part.CFrame then
									local character = player.Character or player.CharacterAdded:Wait()
									if character and character:FindFirstChild("HumanoidRootPart") then
										character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
									end
								end
							end

							teleportTo(leaveTp)
							task.wait(2)
							teleportTo(enterTp)
							task.wait(2)

							if onStuckCallback then
								onStuckCallback()
							end
						end
					end
					break
				end
			else
				stationarySeconds = 0
				lastPosition = currentPosition
			end

			task.wait(1)
		end
	end)
end

local function stopMonitorStuck()
	stuckMonitorThreadId = nil
end

local function teleportTo(part)
	if part and part.CFrame then
		local character = player.Character or player.CharacterAdded:Wait()
		if character and character:FindFirstChild("HumanoidRootPart") then
			character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
		end
	end
end
local function RunTimeTrialScript()
	task.spawn(function()
		if game.PlaceId ~= 140403681187145 then return end

		local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)
		local BreakablesFolder = workspace.__THINGS.Breakables
		local EnterTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
		local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

		local function isValidBreakable(instance)
			return instance:IsA("Model") and tonumber(instance.Name) ~= nil
		end

		local function getCurrentBreakables()
			local list = {}
			for _, child in ipairs(BreakablesFolder:GetChildren()) do
				if isValidBreakable(child) then
					table.insert(list, child.Name)
				end
			end
			return list
		end

		local function waitUntilBreakableGone(name)
			while BreakablesFolder:FindFirstChild(name) do
				task.wait(0.1)
			end
		end

		local function teleportToBreakables()
			while true do
				local breakableNames = getCurrentBreakables()
				if #breakableNames > 0 then
					for _, name in ipairs(breakableNames) do
						local breakable = BreakablesFolder:FindFirstChild(name)
						if breakable and breakable:IsA("Model") then
							local part = breakable:FindFirstChildWhichIsA("BasePart")
							if part then
								teleportTo(part)
								waitUntilBreakableGone(name)
							end
						end
					end
				else
					local oldRuns = getRunsUsed()
					local found = false

					for i = 1, 20 do
						task.wait(1)
						if #getCurrentBreakables() > 0 then
							found = true
							break
						end
						if getRunsUsed() > oldRuns then
							warn("üèÅ ƒê√£ ho√†n th√†nh Time Trial (TotalRuns tƒÉng) ‚Üí R·ªùi kh·ªèi ngay.")
							return true
						end
					end

					if not found then
						warn("‚è≥ Kh√¥ng c√≤n r∆∞∆°ng trong 20s.")
						return false
					end
				end

				task.wait(0.5)
			end
		end

		local savedPosition = nil
		local wasTeleportedOut = false

		local _, maxZoneData = ZoneCmds.GetMaxOwnedZone()
		local requiredZoneNumber = maxZoneData and maxZoneData.ZoneNumber or 0

		while true do
			local _, currentZoneData = ZoneCmds.GetMaxOwnedZone()
			if currentZoneData and currentZoneData.ZoneNumber >= requiredZoneNumber then
				break
			end
			task.wait(5)
		end

		-- Theo d√µi 12 ph√∫t kh√¥ng tƒÉng l∆∞·ª£t, ch·ªâ khi c√≥ ƒëi·ªÉm
		task.spawn(function()
			while getTimeTrialPoints() <= 0 do
				task.wait(10)
			end

			while getRunsUsed() < 10 do
				local before = getRunsUsed()
				local timePassed = 0

				while timePassed < 686 do
					task.wait(10)
					timePassed += 10
					if getRunsUsed() > before then break end
					if getRunsUsed() >= 10 then return end
				end

				if getRunsUsed() == before then
					player:Kick("‚è∞ 12 ph√∫t r·ªìi kh√¥ng tƒÉng l∆∞·ª£t Time Trial.")
					return
				end
			end
		end)

		while getRunsUsed() < 10 do
			local dailyRun = getRunsUsed()
			warn("üîÅ B·∫Øt ƒë·∫ßu l∆∞·ª£t: " .. dailyRun)

			local character = player.Character or player.CharacterAdded:Wait()
			if character and character:FindFirstChild("HumanoidRootPart") then
				savedPosition = character.HumanoidRootPart.CFrame
			end

			teleportTo(EnterTeleport)
			task.wait(5)

			wasTeleportedOut = false

			startMonitorStuck(function()
				warn("üîÅ Retry sau stuck")
				stopMonitorStuck()
				teleportToBreakables()
			end)

			local finished = teleportToBreakables()
			stopMonitorStuck()

			task.wait(5)

			local afterRun = getRunsUsed()

			if LeaveTeleport then
				teleportTo(LeaveTeleport)
				task.wait(3)
				wasTeleportedOut = true
			end

			warn("üéâ ƒê√£ xong Time Trial, l∆∞·ª£t ƒë√£ d√πng: " .. afterRun)

			if savedPosition and not wasTeleportedOut then
				local fakePart = Instance.new("Part")
				fakePart.Anchored = true
				fakePart.CFrame = savedPosition
				fakePart.Transparency = 1
				fakePart.CanCollide = false
				fakePart.Parent = workspace
				teleportTo(fakePart)
				task.delay(1, function() fakePart:Destroy() end)
			end

			task.wait(10)
		end

		warn("üèÅ ƒê·∫°t 10 l∆∞·ª£t Time Trial.")

		-- Theo d√µi reset
		task.spawn(function()
			while true do
				task.wait(300)
				if getRunsUsed() < 10 then
					_G.VAR_TIME_TRIAL = nil
					RunTimeTrialScript()
					break
				end
			end
		end)
	end)
end

-- üöÄ G·ªçi script ch√≠nh
RunTimeTrialScript()
