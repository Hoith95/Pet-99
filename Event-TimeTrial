if _G.VAR_TIME_TRIAL then
	warn("Script ƒë√£ ƒë∆∞·ª£c ch·∫°y tr∆∞·ªõc ƒë√≥!")
	return
end
_G.VAR_TIME_TRIAL = true

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Save = require(game.ReplicatedStorage.Library.Client.Save)

-- GUI
local playerGui = player:WaitForChild("PlayerGui")
local oldGui = playerGui:FindFirstChild("TimeTrialGui")
if oldGui then oldGui:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TimeTrialGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor or Vector2.new(0, 0)
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.Text = "..."
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Parent = screenGui
	return label
end

local pointsLabel = createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = createLabel("TimeTrialLabel", UDim2.new(0.5, 25, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local function getRunsLeft()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats then
		local usedRuns = saveData.TimeTrialStats.DailyRuns or 0
		return math.max(0, 10 - usedRuns)
	end
	return 0
end

local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and saveData.TimeTrialStats.DailyRuns or 0
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats and type(saveData.TimeTrialStats.Points) == "number" then
		return saveData.TimeTrialStats.Points
	end
	return 0
end

task.spawn(function()
	while true do
		local runsLeft = getRunsLeft()
		local points = getTimeTrialPoints()

		pointsLabel.Text = "ƒêi·ªÉm: " .. tostring(points)
		updateLabelSize(pointsLabel)

		timeTrialLabel.Text = "Time Trial: " .. tostring(runsLeft) .. " / 10"
		updateLabelSize(timeTrialLabel)

		task.wait(10)
	end
end)
local _stuckRetries = 0
local stuckMonitorThread = nil
local retrying = false

local function stopMonitorStuck()
	if stuckMonitorThread then
		pcall(function()
			task.cancel(stuckMonitorThread)
		end)
		stuckMonitorThread = nil
	end
end

local function RunTimeTrialScript()
	task.spawn(function()
		if game.PlaceId ~= 140403681187145 then return end

		local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)
		local BreakablesFolder = workspace.__THINGS.Breakables
		local EnterTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
		local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

		local function teleportTo(part)
			if part and part.CFrame then
				local character = player.Character or player.CharacterAdded:Wait()
				if character and character:FindFirstChild("HumanoidRootPart") then
					character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
				end
			end
		end

		local function isValidBreakable(instance)
			return instance:IsA("Model") and tonumber(instance.Name) ~= nil
		end

		local function getCurrentBreakables()
			local list = {}
			for _, child in ipairs(BreakablesFolder:GetChildren()) do
				if isValidBreakable(child) then
					table.insert(list, child.Name)
				end
			end
			return list
		end

		local function waitUntilBreakableGone(name)
			while true do
				local breakable = BreakablesFolder:FindFirstChild(name)
				if not breakable then break end
				task.wait(0.1)
			end
		end

		local function startMonitorStuck(onStuckCallback)
			if stuckMonitorThread then task.cancel(stuckMonitorThread) end

			stuckMonitorThread = task.spawn(function()
				local stationarySeconds = 0
				local lastPosition = nil

				while true do
					local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
					if not hrp then task.wait(1) continue end

					local currentPosition = hrp.Position
					if lastPosition and (currentPosition - lastPosition).Magnitude < 0.5 then
						stationarySeconds += 1
						if stationarySeconds >= 60 then
							stopMonitorStuck()
							_stuckRetries += 1
							warn("‚ö†Ô∏è ƒê·ª©ng y√™n 60s - x·ª≠ l√Ω stuck l·∫ßn " .. _stuckRetries)

							if _stuckRetries >= 3 then
								player:Kick("ƒê·ª©ng y√™n 60s x3 l·∫ßn li√™n ti·∫øp ‚Üí kick")
							else
								retrying = true
								teleportTo(LeaveTeleport)
								task.wait(15)
								onStuckCallback()
							end
							break
						end
					else
						stationarySeconds = 0
						lastPosition = currentPosition
					end

					task.wait(1)
				end
			end)
		end

		local function waitUntilReachZone(targetZone)
			while true do
				local _, currentZoneData = ZoneCmds.GetMaxOwnedZone()
				if currentZoneData and currentZoneData.ZoneNumber >= targetZone then
					print("‚úÖ ƒê√£ ƒë·∫°t Zone " .. targetZone)
					break
				end
				task.wait(5)
			end
		end

		local function monitorNoRunDecrease()
			while getTimeTrialPoints() <= 0 do
				print("‚è≥ Ch·ªù c√≥ ƒëi·ªÉm Time Trial...")
				task.wait(10)
			end

			local currentRuns = getRunsUsed()
			if currentRuns >= 10 then return end

			while currentRuns < 10 do
				local startRuns = currentRuns
				local totalTime = 0

				while totalTime < 686 do
					task.wait(10)
					totalTime += 10

					currentRuns = getRunsUsed()
					if currentRuns >= 10 then return end
					if currentRuns > startRuns then break end
				end

				if currentRuns == startRuns then
					player:Kick("‚è∞ 12 ph√∫t kh√¥ng gi·∫£m l∆∞·ª£t ‚Üí Kick")
					return
				end
			end
		end

		task.spawn(monitorNoRunDecrease)
		local _, maxZoneData = ZoneCmds.GetMaxOwnedZone()
		local requiredZoneNumber = maxZoneData and maxZoneData.ZoneNumber or 0
		waitUntilReachZone(requiredZoneNumber)

		local savedPosition = nil
		local lastTotalRuns = getRunsUsed()

		while true do
			if getRunsUsed() >= 10 then
				warn("üéØ ƒê√£ ƒë·ªß 10 l∆∞·ª£t ch·∫°y, d·ª´ng script.")
				break
			end

			retrying = false
			warn("üîÅ B·∫Øt ƒë·∫ßu Time Trial m·ªõi")

			local character = player.Character or player.CharacterAdded:Wait()
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if hrp then
				savedPosition = hrp.CFrame
			end

			teleportTo(EnterTeleport)
			task.wait(5)

			startMonitorStuck(function()
				RunTimeTrialScript()
			end)

			local function teleportToBreakablesWithTotalRunCheck()
				local startRuns = getRunsUsed()
				local timeout = 20
				local hasBreakables = false

				for i = 1, 40 do
					local breakables = getCurrentBreakables()
					if #breakables > 0 then
						hasBreakables = true
						for _, name in ipairs(breakables) do
							local b = BreakablesFolder:FindFirstChild(name)
							if b then
								local part = b:FindFirstChildWhichIsA("BasePart")
								if part then
									teleportTo(part)
									waitUntilBreakableGone(name)
								end
							end
						end
					else
						if getRunsUsed() > startRuns then
							warn("‚úÖ T·ªïng Run ƒë√£ tƒÉng ‚Üí tho√°t Time Trial s·ªõm")
							break
						end
						task.wait(1)
					end
				end

				if not hasBreakables then
					local finalRuns = getRunsUsed()
					if finalRuns > startRuns then
						warn("‚úÖ Kh√¥ng c√≤n breakables nh∆∞ng Run tƒÉng ‚Üí tho√°t Time Trial")
					else
						warn("üïí Kh√¥ng c√≤n r∆∞∆°ng, ch·ªù 20s nh∆∞ c≈©")
						task.wait(20)
					end
				end
			end

			teleportToBreakablesWithTotalRunCheck()
			stopMonitorStuck()

			if LeaveTeleport then
				teleportTo(LeaveTeleport)
				task.wait(3)
			end

			if savedPosition and not retrying then
				local fakePart = Instance.new("Part")
				fakePart.Anchored = true
				fakePart.CFrame = savedPosition
				fakePart.Transparency = 1
				fakePart.CanCollide = false
				fakePart.Parent = workspace
				teleportTo(fakePart)
				task.delay(1, function() fakePart:Destroy() end)
				warn("üîô Quay v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu")
			end

			task.wait(15)
		end

		warn("‚úÖ Ho√†n t·∫•t Time Trial, theo d√µi reset ƒë·ªÉ t·ª± ƒë·ªông ch·∫°y l·∫°i")

		task.spawn(function()
			while true do
				task.wait(300)
				local r = getRunsUsed()
				if r < 10 then
					warn("üîÅ DailyRuns reset ‚Üí ch·∫°y l·∫°i script")
					_G.VAR_TIME_TRIAL = nil
					RunTimeTrialScript()
					break
				end
			end
		end)
	end)
end

-- üöÄ G·ªçi script ch√≠nh
RunTimeTrialScript()
