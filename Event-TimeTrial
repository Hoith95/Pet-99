-- Tự động đua thời gian trong map 264
task.spawn(function()

-- Chỉ chạy nếu đang ở đúng PlaceId (map 264)
    if game.PlaceId ~= 140403681187145 then
        return
    end

    -- Khai báo các biến cần thiết
    local player = game.Players.LocalPlayer
    local Save = require(game.ReplicatedStorage.Library.Client.Save)
    local TimeTrials = require(game.ReplicatedStorage.Library.Types.TimeTrials)

    -- Hàm dịch chuyển qua nhiều điểm liên tiếp (mỗi lần chờ 0.5 giây)
    local function teleportSequence(player, sequence)
        for _, cframe in ipairs(sequence) do
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = cframe
                task.wait(0.5) -- Thời gian chờ giữa các lần dịch chuyển
            else
                break
            end
        end
    end

    -- Hàm teleport đến một part cụ thể (thường là cổng vào/ra)
    local function teleportTo(part)
        if part and part:IsA("BasePart") then
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = part.CFrame
            end
        end
    end

    -- Hàm xác định thời gian chạy đua (duration) dựa vào dữ liệu Save
    local function getDuration()
        local saveData = Save.Get()
        if not saveData then
            warn("Lỗi: Không lấy được dữ liệu save")
            return nil
        end

        local timeTrialStats = saveData.TimeTrialStats
        if not timeTrialStats then
            warn("Không tìm thấy TimeTrialStats")
            return 50 -- Mặc định nếu thiếu
        end

        local totalRuns = timeTrialStats.TotalRuns or timeTrialStats.RemainingRuns or 0
        warn("Số lần TotalRuns: " .. tostring(totalRuns))

        if totalRuns >= 10 then
            warn("Đã đủ 10 lần, dừng script")
            return nil
        end

        local goalIndex = timeTrialStats.GoalIndex or 1
        local goal = TimeTrials.Goals[goalIndex]
        local duration = nil

        if not goal or not goal.Reward then
            duration = 200
        else
            local amount = nil
            local success, result = pcall(function()
                return goal.Reward:GetAmount()
            end)
            if success then
                amount = result
            end

            if typeof(amount) == "number" and math.floor(amount) == amount then
                duration = 50
            else
                duration = 200
            end
        end

        warn("Duration được đặt là: " .. tostring(duration))
        return duration
    end

    -- Chuỗi các điểm teleport hợp nhất (5 điểm chính + 1 điểm kết thúc)
    local teleportSequencePoints = {
        CFrame.new(-18079, 20, -484),
        CFrame.new(-18359, 20, -560),
        CFrame.new(-18306, 20, -695),
        CFrame.new(-18222, 20, -604),
        CFrame.new(-18221, 20, -458),
        CFrame.new(-18110, 20, -658), -- Điểm cuối (trước khi thoát)
    }

    -- Kiểm tra nhân vật đã load hoàn chỉnh chưa
    local character = player.Character
    if not (character and character:FindFirstChild("HumanoidRootPart")) then
        warn("Không tìm thấy HumanoidRootPart, dừng script")
        return
    end

    -- Vòng lặp chính
    while true do

        local duration = getDuration()
        if not duration or duration <= 0 or duration == 200 then
            warn("Duration không hợp lệ hoặc quá lớn, dừng vòng lặp")
            break
        end

        -- Teleport đến cổng vào Time Trial
        teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
        task.wait(5) -- Chờ game load

        -- Đếm thời gian thật bằng tick()
        local startTime = tick()
        while tick() - startTime < duration do
            teleportSequence(player, teleportSequencePoints)
        end

        -- Chờ thêm 10 giây rồi thoát ra ngoài
        task.wait(10)
        teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Leave)

        -- Chờ 15 giây trước khi kiểm tra lại và tiếp tục
        task.wait(15)
    end

end)
