if _G.VAR_TIME_TRIAL then
	warn("⛔ Script đã được chạy trước đó!")
	return
end

_G.VAR_TIME_TRIAL = true
_G.STOP_TIME_TRIAL = false

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()

local Save = require(ReplicatedStorage.Library.Client.Save)
local ZoneCmds = require(ReplicatedStorage.Library.Client.ZoneCmds)

local lagFlag = false
local endFlag = false
local lagMonitorThread, increaseMonitorThread, monitor12minThread

-- Các hàm tiện ích
local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function getRunsLeft()
	return 10 - getRunsUsed()
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.Points or 0) or 0
end

local function getTotalRuns()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0
end

local function teleportToRewardLocation()
	warn("🚶‍♂️ Đang teleport đến vị trí đổi quà...")
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-14223, 17.39, 1387)
end

local function teleportToLocation()
	warn("🚶‍♂️ Đang teleport về vị trí map 269...")
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-14251, 17.39, 1336)
end

local function teleportTo(part)
	local character = player.Character or player.CharacterAdded:Wait()
	if character and character:FindFirstChild("HumanoidRootPart") and part and part.CFrame then
		character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
	end
end

local function safeTeleportOut()
	teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Leave)
	task.wait(9)
	if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
	if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
end

-- GUI hiển thị
local screenGui = playerGui:FindFirstChild("TimeTrialGui")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TimeTrialGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui
end

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Text = "..."
	label.Parent = screenGui
	return label
end

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local pointsLabel = createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = createLabel("TimeTrialLabel", UDim2.new(0.5, 30, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

task.spawn(function()
	while true do
		pointsLabel.Text = "Điểm: " .. tostring(getTimeTrialPoints())
		updateLabelSize(pointsLabel)
		timeTrialLabel.Text = "Time Trial: " .. tostring(getRunsLeft()) .. "/10"
		updateLabelSize(timeTrialLabel)
		task.wait(10)
	end
end)

-- Check zone
local function getMaxZoneFromMap4()
	local mapFolder = workspace:FindFirstChild("Map4")
	if not mapFolder then return 0 end
	local maxZone = 0
	for _, folder in ipairs(mapFolder:GetChildren()) do
		if folder:IsA("Folder") then
			local zoneNumber = tonumber(folder.Name:match("^(%d+)"))
			if zoneNumber and zoneNumber > maxZone then
				maxZone = zoneNumber
			end
		end
	end
	return maxZone
end

local function waitUntilReachMaxZone()
	local maxMapZone = getMaxZoneFromMap4()
	while true do
		local success, data = pcall(function()
			local _, zoneData = ZoneCmds.GetMaxOwnedZone()
			return zoneData
		end)
		local current = success and data and data.ZoneNumber or 0
		if current >= maxMapZone then
			warn("✅ Đã đạt Zone tối đa (" .. tostring(current) .. ")")
			break
		end
		warn("⏳ Chưa đạt Zone tối đa (" .. tostring(current) .. "/" .. tostring(maxMapZone) .. "), đợi 60s...")
		task.wait(60)
	end
end

local function startMonitor12Min()
	monitor12minThread = task.spawn(function()
		while true do
			-- Nếu đã đủ 10 lượt thì dừng theo dõi
			if getRunsUsed() >= 10 then
				warn("🛑 Đã đủ 10 lượt → dừng theo dõi 12 phút.")
				return
			end

			local startUsed = getRunsUsed()
			local startTotal = getTotalRuns()
			local t = 0
			while t < 720 do
				task.wait(10)
				t += 10

				-- Nếu đã thay đổi → reset thời gian theo dõi
				if getRunsUsed() ~= startUsed or getTotalRuns() ~= startTotal then
					break
				end

				-- Nếu đủ 10 lượt trong quá trình theo dõi → thoát luôn
				if getRunsUsed() >= 10 then
					warn("🛑 Đã đủ 10 lượt → dừng theo dõi 12 phút.")
					return
				end
			end

			if getRunsUsed() == startUsed and getTotalRuns() == startTotal then
				player:Kick("⏰ 12 phút không đổi lượt hoặc tổng Time Trial → nghi ngờ treo máy.")
				return
			end
		end
	end)
end

-- Theo dõi đứng yên (lag)
local function startLagMonitor()
	lagMonitorThread = task.spawn(function()
		local retryCount = 0
		local lastPosition = nil
		while true do
			local character = player.Character or player.CharacterAdded:Wait()
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if not hrp then task.wait(5) continue end
			lastPosition = hrp.Position
			task.wait(60)
			local currentPos = hrp.Position
			if (lastPosition - currentPos).Magnitude < 1 then
				retryCount += 1
				warn("⚠️ Đứng im " .. retryCount .. " lần")
				if retryCount <= 3 then
					lagFlag = true
					safeTeleportOut()
					return
				else
					player:Kick("Lag quá lâu trong Time Trial.")
					return
				end
			else
				retryCount = 0
			end
			task.wait(5)
		end
	end)
end

-- Theo dõi tăng điểm hoặc total runs
local function startIncreaseMonitor(startPoints, startRuns)
	increaseMonitorThread = task.spawn(function()
		warn("⏳ Theo dõi tăng Điểm/TotalRuns")
		while true do
			if lagFlag then return end
			if getTimeTrialPoints() > startPoints or getTotalRuns() > startRuns then
				warn("✅ Điểm hoặc TotalRuns tăng → Thoát Time Trial")
				endFlag = true
				safeTeleportOut()
				return
			end
			task.wait(1)
		end
	end)
end
-- Farm từng lượt trong Time Trial
local function teleportFarmLoop(startPoints, startRuns)
	while true do
		if lagFlag or endFlag or _G.STOP_TIME_TRIAL then
			warn("⚠️ Dừng teleportFarmLoop")
			return
		end
		local names = {}
		for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
			if c:IsA("Model") and tonumber(c.Name) then
				table.insert(names, c.Name)
			end
		end
		if #names > 0 then
			for _, n in ipairs(names) do
				if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
				local b = workspace.__THINGS.Breakables:FindFirstChild(n)
				if b then
					local p = b:FindFirstChildWhichIsA("BasePart")
					if p then
						teleportTo(p)
						while workspace.__THINGS.Breakables:FindFirstChild(n) do
							if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
							task.wait(0.1)
						end
					end
				end
			end
		else
			warn("⏳ Không có rương, chờ 20s...")
			local found = false
			for i = 1, 200 do
				if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
				task.wait(0.1)
				for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
					if c:IsA("Model") and tonumber(c.Name) then
						found = true
						break
					end
				end
				if found then break end
			end
			if not found then
				warn("❌ Hết rương → kết thúc lượt")
				endFlag = true
				safeTeleportOut()
				return
			end
		end
		task.wait(0.1)
	end
end

local function cleanupAllThreads()
	warn("🧹 Cleanup toàn bộ thread & trạng thái")
	if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
	if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
	if monitor12minThread then pcall(task.cancel, monitor12minThread) monitor12minThread = nil end
	lagFlag = false
	endFlag = false
	_G.STOP_TIME_TRIAL = false
	_G.VAR_TIME_TRIAL = nil
end

-- ==== ĐỔI QUÀ SAU KHI HOÀN TẤT ====
local function claimReward()
	warn("🎁 Bắt đầu đổi quà...")

	-- 📊 Lấy điểm Time Trial
	local points = getTimeTrialPoints()
	local currentDay = os.date("*t").wday
	local isSaturday = (currentDay == 7)

	local chest3, chest2, chest1 = 0, 0, 0
	if isSaturday then
		warn("📆 Hôm nay là Thứ 7 → Đổi hết toàn bộ điểm.")
		chest3 = math.floor(points / 5000)
		points = points - chest3 * 5000

		chest2 = math.floor(points / 3000)
		points = points - chest2 * 3000

		chest1 = math.floor(points / 1000)
	else
		warn("📆 Hôm nay KHÔNG phải Thứ 7 → Chỉ đổi hộp 3, giữ điểm dư.")
		chest3 = math.floor(points / 5000)
	end

	warn("🧾 Số lần đổi quà sẽ thực hiện:")
	warn("📦 Hộp 3 (5000): " .. chest3)
	warn("📦 Hộp 2 (3000): " .. chest2)
	warn("📦 Hộp 1 (1000): " .. chest1)

	local totalChests = chest3 + chest2 + chest1
	if totalChests == 0 then
		warn("⚠️ Không có phần thưởng nào đủ điểm để đổi.")
		return
	end

	-- 📦 Gọi server để đổi hộp
	local function openChest(chestType)
		local args = { [1] = chestType }
		return ReplicatedStorage.Network.TimeTrials_OpenChest:InvokeServer(unpack(args))
	end

	-- 🔁 Đổi nhiều hộp 1 loại
	local function claimMultiple(count, chestType)
		for i = 1, count do
			warn("🔁 Đang thực hiện đổi hộp " .. chestType .. " - lần " .. i .. "...")
			local success, err = pcall(function()
				openChest(chestType)
			end)
			if success then
				warn("✅ Đổi thành công hộp " .. chestType .. " - lần " .. i)
			else
				warn("❌ Lỗi khi đổi hộp " .. chestType .. ": " .. tostring(err))
			end
			task.wait(5)
		end
	end

	-- 🗺️ Teleport tới đổi
	teleportToRewardLocation()
	task.wait(2)
	claimMultiple(chest3, 3)
	claimMultiple(chest2, 2)
	claimMultiple(chest1, 1)
	task.wait(5)
	teleportToLocation()
end

-- === VÒNG LẶP CHÍNH ===
task.spawn(function()
	waitUntilReachMaxZone()
	startMonitor12Min()

	while true do
		while getRunsUsed() < 10 do
			local used = getRunsUsed()
			lagFlag = false
			endFlag = false

			if used > 0 then
				warn("⏸️ Nghỉ 30s trước lượt tiếp theo...")
				task.wait(30)
			end

			local startPoints = getTimeTrialPoints()
			local startRuns = getTotalRuns()

			warn("🔁 Bắt đầu lượt: " .. tostring(used))
			teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
			task.wait(5)

			local retry = 0
			while not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("TimeTrial") and retry < 3 do
				retry += 1
				warn("❌ Vào thất bại, thử lại...")
				teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
				task.wait(5)
			end

			if not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("TimeTrial") then
				warn("⛔ Không thể vào Time Trial.")
				cleanupAllThreads()
				return
			end

			startLagMonitor()
			startIncreaseMonitor(startPoints, startRuns)
			teleportFarmLoop(startPoints, startRuns)
			task.wait(5)

			if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
			if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
		end

		warn("🎉 Hoàn tất 10/10 lượt Time Trial.")
		claimReward()
		task.wait(5)
		cleanupAllThreads()

		warn("⏳ Theo dõi reset DailyRuns...")

		while getRunsUsed() >= 10 do
			task.wait(60)
		end

		warn("🔁 DailyRuns reset → tiếp tục farm.")
	end
end)
