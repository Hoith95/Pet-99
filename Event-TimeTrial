task.spawn(function()
	if game.PlaceId ~= 140403681187145 then return end

	local player = game.Players.LocalPlayer
	local Save = require(game.ReplicatedStorage.Library.Client.Save)

	local function teleportTo(part)
		if part and part.CFrame then
			local character = player.Character or player.CharacterAdded:Wait()
			if character and character:FindFirstChild("HumanoidRootPart") then
				character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
			end
		end
	end

	local BreakablesFolder = workspace.__THINGS.Breakables
	local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

	local function isValidBreakable(instance)
		return instance:IsA("Model") and tonumber(instance.Name) ~= nil
	end

	local function getCurrentBreakables()
		local list = {}
		for _, child in ipairs(BreakablesFolder:GetChildren()) do
			if isValidBreakable(child) then
				table.insert(list, child.Name)
			end
		end
		return list
	end

	local function waitUntilBreakableGone(name)
		while true do
			local breakable = BreakablesFolder:FindFirstChild(name)
			if not breakable then break end
			task.wait(0.1)
		end
	end

	local exitedManually = false
	local function teleportToBreakables()
		while true do
			local breakableNames = getCurrentBreakables()

			if #breakableNames > 0 then
				for _, name in ipairs(breakableNames) do
					local breakable = BreakablesFolder:FindFirstChild(name)
					if breakable and breakable:IsA("Model") then
						local part = breakable:FindFirstChildWhichIsA("BasePart")
						if part then
							teleportTo(part)
							waitUntilBreakableGone(name)
						end
					end
				end
			else
				local hasNew = false
				for i = 1, 20 do
					task.wait(1)
					if #getCurrentBreakables() > 0 then
						hasNew = true
						break
					end
				end

				if not hasNew then
					if LeaveTeleport then
						teleportTo(LeaveTeleport)
						task.wait(5)
						exitedManually = true
					end
					break
				end
			end

			task.wait(0.5)
		end
	end

	local savedPosition = nil

	while true do
		local saveData = Save.Get()
		local totalRuns = saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0

		if totalRuns >= 10 then
			warn("🎯 Đã đủ 10 lượt chạy, dừng script.")
			break
		end

		warn("🔁 Bắt đầu vòng Time Trial thứ " .. tostring(totalRuns + 1))

		-- 🧠 Lưu lại vị trí trước khi vào Trial
		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:FindFirstChild("HumanoidRootPart")
		if hrp then
			savedPosition = hrp.CFrame
		end

		local failedAttempts = 0
		local MAX_ATTEMPTS = 3
		local successEnter = false

		while failedAttempts < MAX_ATTEMPTS do
			teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
			task.wait(5)
			warn("🚪 Đã teleport vào Time Trial, đang chờ Breakables...")

			local foundBreakables = false
			for i = 1, 60 do
				if #BreakablesFolder:GetChildren() > 0 then
					foundBreakables = true
					break
				end
				task.wait(0.5)
			end

			if foundBreakables then
				warn("✅ Breakables đã xuất hiện, bắt đầu farm")
				successEnter = true
				break
			else
				failedAttempts += 1
				warn("❌ Không thấy Breakables (lần thử " .. failedAttempts .. ")")

				if LeaveTeleport then
					teleportTo(LeaveTeleport)
					task.wait(5)
				end

				task.wait(30)
			end
		end

		if not successEnter then
			game.Players.LocalPlayer:Kick("Tìm Breakables Méo Thấy")
			return
		end

		-- Reset cờ "ra tay thủ công"
		exitedManually = false

		teleportToBreakables()
		task.wait(10)

		if not exitedManually and LeaveTeleport then
			teleportTo(LeaveTeleport)
			warn("🚪 Đã ra khỏi Time Trial")
			task.wait(5)
		end

		if savedPosition then
			teleportTo({CFrame = savedPosition})
			warn("🔙 Đã quay về vị trí ban đầu")
		end

		task.wait(15)
	end

	warn("🎉 Đã hoàn tất Time Trial hoặc đạt 10 lượt.")
end)
