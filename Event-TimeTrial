if _G.VAR_TIME_TRIAL then
	warn("Script ƒë√£ ƒë∆∞·ª£c ch·∫°y tr∆∞·ªõc ƒë√≥!")
	return
end

_G.VAR_TIME_TRIAL = true

-- Kh·ªüi t·∫°o GUI
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Save = require(game.ReplicatedStorage.Library.Client.Save)

local playerGui = player:WaitForChild("PlayerGui")
local oldGui = playerGui:FindFirstChild("TimeTrialGui")
if oldGui then oldGui:Destroy() end

local function getRunsLeft()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats then
		local usedRuns = saveData.TimeTrialStats.DailyRuns or 0
		return math.max(0, 10 - usedRuns)
	end
	return 0
end

local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and saveData.TimeTrialStats.DailyRuns or 0
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	return (saveData and saveData.TimeTrialStats and tonumber(saveData.TimeTrialStats.Points)) or 0
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TimeTrialGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor or Vector2.new(0, 0)
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.Text = "..."
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Parent = screenGui
	return label
end

local pointsLabel = createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = createLabel("TimeTrialLabel", UDim2.new(0.5, 25, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

task.spawn(function()
	while true do
		pointsLabel.Text = "ƒêi·ªÉm: " .. tostring(getTimeTrialPoints())
		updateLabelSize(pointsLabel)

		timeTrialLabel.Text = "Time Trial: " .. tostring(getRunsLeft()) .. " / 10"
		updateLabelSize(timeTrialLabel)

		task.wait(10)
	end
end)

-- Thread stuck
local _stuckRetries = 0
local stuckMonitorThread = nil

local function stopMonitorStuck()
	if stuckMonitorThread then
		pcall(function() task.cancel(stuckMonitorThread) end)
		stuckMonitorThread = nil
	end
end

local function startMonitorStuck(onStuckCallback)
	stopMonitorStuck()
	stuckMonitorThread = task.spawn(function()
		local stationarySeconds = 0
		local lastPosition = nil

		while true do
			local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			if not hrp then task.wait(1) continue end

			local currentPosition = hrp.Position
			if lastPosition and (currentPosition - lastPosition).Magnitude < 0.5 then
				stationarySeconds += 1
				if stationarySeconds >= 60 then
					warn("‚ö†Ô∏è Nh√¢n v·∫≠t ƒë·ª©ng y√™n t·∫°i 1 v·ªã tr√≠ 60s ‚áí x·ª≠ l√Ω stuck l·∫ßn th·ª© " .. tostring(_stuckRetries + 1))
					stopMonitorStuck()
					_stuckRetries += 1

					if _stuckRetries >= 3 then
						player:Kick("ƒê·ª©ng y√™n qu√° 60s trong Time Trial (3 l·∫ßn)")
					elseif onStuckCallback then
						onStuckCallback()
					end
					break
				end
			else
				stationarySeconds = 0
				lastPosition = currentPosition
			end
			task.wait(1)
		end
	end)
end
local function RunTimeTrialScript()
	task.spawn(function()
		if game.PlaceId ~= 140403681187145 then return end

		local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)
		local BreakablesFolder = workspace.__THINGS.Breakables
		local EnterTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
		local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

		local function teleportTo(part)
			if part and part.CFrame then
				local character = player.Character or player.CharacterAdded:Wait()
				if character and character:FindFirstChild("HumanoidRootPart") then
					character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
				end
			end
		end

		local function isValidBreakable(instance)
			return instance:IsA("Model") and tonumber(instance.Name) ~= nil
		end

		local function getCurrentBreakables()
			local list = {}
			for _, child in ipairs(BreakablesFolder:GetChildren()) do
				if isValidBreakable(child) then
					table.insert(list, child.Name)
				end
			end
			return list
		end

		local function waitUntilBreakableGone(name)
			while true do
				local breakable = BreakablesFolder:FindFirstChild(name)
				if not breakable then break end
				task.wait(0.1)
			end
		end

		local function teleportToBreakables()
			while true do
				local breakableNames = getCurrentBreakables()
				if #breakableNames > 0 then
					for _, name in ipairs(breakableNames) do
						local breakable = BreakablesFolder:FindFirstChild(name)
						if breakable and breakable:IsA("Model") then
							local part = breakable:FindFirstChildWhichIsA("BasePart")
							if part then
								teleportTo(part)
								waitUntilBreakableGone(name)
							end
						end
					end
				else
					local startRuns = getRunsUsed()
					local waitStart = os.clock()
					local hasNew = false

					while os.clock() - waitStart < 20 do
						task.wait(1)
						if #getCurrentBreakables() > 0 then
							hasNew = true
							break
						end
					end

					local endRuns = getRunsUsed()
					if endRuns > startRuns then
						warn("üéâ Ho√†n th√†nh Time Trial (TotalRuns tƒÉng), r·ªùi kh·ªèi ngay!")
						if LeaveTeleport then teleportTo(LeaveTeleport) end
					else
						warn("‚è≥ Kh√¥ng c√≤n Breakables sau 20s, r·ªùi kh·ªèi Time Trial.")
						if LeaveTeleport then teleportTo(LeaveTeleport) end
					end

					break
				end
				task.wait(0.5)
			end
		end

		local _, maxZoneData = ZoneCmds.GetMaxOwnedZone()
		local requiredZoneNumber = maxZoneData and maxZoneData.ZoneNumber or 0

		while true do
			local _, currentZoneData = ZoneCmds.GetMaxOwnedZone()
			if currentZoneData and currentZoneData.ZoneNumber >= requiredZoneNumber then
				warn("‚úÖ ƒê√£ ƒë·∫°t Zone " .. requiredZoneNumber .. ", b·∫Øt ƒë·∫ßu ch·∫°y Time Trial.")
				break
			end
			task.wait(5)
		end

		task.spawn(function()
			while getTimeTrialPoints() <= 0 do
				warn("‚è≥ Ch∆∞a c√≥ ƒëi·ªÉm Time Trial, ch·ªù ƒë·∫øn khi c√≥ ƒëi·ªÉm r·ªìi m·ªõi theo d√µi 12 ph√∫t.")
				task.wait(10)
			end

			while getRunsUsed() < 10 do
				local startRuns = getRunsUsed()
				local totalTime = 0

				while totalTime < 686 do
					task.wait(10)
					totalTime += 10
					if getRunsUsed() > startRuns then break end
				end

				if getRunsUsed() == startRuns then
					player:Kick("‚è∞ 12 ph√∫t kh√¥ng tƒÉng l∆∞·ª£t Time Trial.")
					return
				end
			end
		end)

		while getRunsUsed() < 10 do
			local run = getRunsUsed()
			warn("üîÅ B·∫Øt ƒë·∫ßu v√≤ng Time Trial, l∆∞·ª£t hi·ªán t·∫°i: " .. run)

			local savedPosition = nil
			local character = player.Character or player.CharacterAdded:Wait()
			if character and character:FindFirstChild("HumanoidRootPart") then
				savedPosition = character.HumanoidRootPart.CFrame
			end

			if EnterTeleport then teleportTo(EnterTeleport) end
			task.wait(5)
			warn("üö™ ƒê√£ teleport v√†o Time Trial, ƒëang chu·∫©n b·ªã farm...")

			startMonitorStuck(function()
				warn("üîÅ Retry sau stuck")
				if LeaveTeleport then teleportTo(LeaveTeleport) end
				task.wait(3)
				if EnterTeleport then teleportTo(EnterTeleport) end
				startMonitorStuck()
				teleportToBreakables()
				stopMonitorStuck()
			end)

			teleportToBreakables()
			stopMonitorStuck()

			task.wait(10)
			if LeaveTeleport then teleportTo(LeaveTeleport) end
			task.wait(3)

			if savedPosition then
				local fakePart = Instance.new("Part")
				fakePart.Anchored = true
				fakePart.CFrame = savedPosition
				fakePart.Transparency = 1
				fakePart.CanCollide = false
				fakePart.Parent = workspace
				teleportTo(fakePart)
				task.delay(1, function() fakePart:Destroy() end)
				warn("üîô Quay v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu")
			end

			task.wait(10)
		end

		warn("üéØ ƒê√£ ƒë·ªß 10 l∆∞·ª£t ch·∫°y, script k·∫øt th√∫c.")
	end)
end

-- üöÄ B·∫Øt ƒë·∫ßu
RunTimeTrialScript()
