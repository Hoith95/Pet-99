if _G.VAR_TIME_TRIAL then
	warn("Script đã được chạy trước đó!")
	return
end

_G.VAR_TIME_TRIAL = true

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Save = require(game.ReplicatedStorage.Library.Client.Save)

local playerGui = player:WaitForChild("PlayerGui")
local oldGui = playerGui:FindFirstChild("TimeTrialGui")
if oldGui then oldGui:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TimeTrialGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor or Vector2.new(0, 0)
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.Text = "..."
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Parent = screenGui
	return label
end

local pointsLabel = createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = createLabel("TimeTrialLabel", UDim2.new(0.5, 25, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and saveData.TimeTrialStats.DailyRuns or 0
end

local function getRunsLeft()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats then
		local usedRuns = saveData.TimeTrialStats.DailyRuns or 0
		return math.max(0, 10 - usedRuns)
	end
	return 0
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	if saveData and saveData.TimeTrialStats and type(saveData.TimeTrialStats.Points) == "number" then
		return saveData.TimeTrialStats.Points
	end
	return 0
end

task.spawn(function()
	while true do
		local runsLeft = getRunsLeft()
		local points = getTimeTrialPoints()

		pointsLabel.Text = "Điểm: " .. tostring(points)
		updateLabelSize(pointsLabel)

		timeTrialLabel.Text = "Time Trial: " .. tostring(runsLeft) .. " / 10"
		updateLabelSize(timeTrialLabel)

		task.wait(10)
	end
end)

local _stuckRetries = 0
local stuckMonitorThread = nil
local function stopMonitorStuck()
	if stuckMonitorThread then
		pcall(function()
			task.cancel(stuckMonitorThread)
		end)
		stuckMonitorThread = nil
	end
end
local function RunTimeTrialScript()
	task.spawn(function()
		if game.PlaceId ~= 140403681187145 then return end

		local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)
		local BreakablesFolder = workspace.__THINGS.Breakables
		local EnterTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
		local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

		local function teleportTo(part)
			if part and part.CFrame then
				local character = player.Character or player.CharacterAdded:Wait()
				if character and character:FindFirstChild("HumanoidRootPart") then
					character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
				end
			end
		end

		local function isValidBreakable(instance)
			return instance:IsA("Model") and tonumber(instance.Name) ~= nil
		end

		local function getCurrentBreakables()
			local list = {}
			for _, child in ipairs(BreakablesFolder:GetChildren()) do
				if isValidBreakable(child) then
					table.insert(list, child.Name)
				end
			end
			return list
		end

		local function waitUntilBreakableGone(name)
			while true do
				local breakable = BreakablesFolder:FindFirstChild(name)
				if not breakable then break end
				task.wait(0.1)
			end
		end

		local function farmBreakables()
			while true do
				local breakableNames = getCurrentBreakables()
				if #breakableNames > 0 then
					for _, name in ipairs(breakableNames) do
						local breakable = BreakablesFolder:FindFirstChild(name)
						if breakable and breakable:IsA("Model") then
							local part = breakable:FindFirstChildWhichIsA("BasePart")
							if part then
								teleportTo(part)
								waitUntilBreakableGone(name)
							end
						end
					end
				else
					local startRuns = getRunsUsed()
					local waited = 0
					local changed = false
					while waited < 20 do
						task.wait(1)
						waited += 1
						if #getCurrentBreakables() > 0 then
							changed = true
							break
						elseif getRunsUsed() > startRuns then
							warn("🎉 TotalRuns đã tăng ⇒ rời khỏi Time Trial!")
							return "finished"
						end
					end
					if not changed then
						return "noMoreBreakables"
					end
				end
				task.wait(0.5)
			end
		end

		local function waitUntilReachZone(targetZone)
			while true do
				local _, currentZoneData = ZoneCmds.GetMaxOwnedZone()
				if currentZoneData and currentZoneData.ZoneNumber >= targetZone then
					print("✅ Đã đạt Zone " .. targetZone .. ", bắt đầu chạy Time Trial.")
					break
				end
				print("⏳ Chưa đạt Zone " .. targetZone .. ", đang đợi...")
				task.wait(5)
			end
		end

		local _, maxZoneData = ZoneCmds.GetMaxOwnedZone()
		local requiredZone = maxZoneData and maxZoneData.ZoneNumber or 0
		waitUntilReachZone(requiredZone)

		task.spawn(function()
			while getTimeTrialPoints() <= 0 do
				print("🕓 Chưa có điểm Time Trial, chờ đến khi nhận được điểm rồi mới theo dõi 12 phút.")
				task.wait(10)
			end

			local currentRuns = getRunsUsed()
			print("📊 Số lượt Time Trial đã dùng: " .. currentRuns)

			if currentRuns >= 10 then
				warn("🎯 Đã dùng đủ 10 lượt, không cần theo dõi thêm.")
				return
			end

			while currentRuns < 10 do
				local startRuns = currentRuns
				local totalTime = 0

				print("🕒 Theo dõi 12 phút kể từ lượt: " .. startRuns)

				while totalTime < 686 do
					task.wait(10)
					totalTime += 10

					currentRuns = getRunsUsed()
					if currentRuns >= 10 then
						warn("🎉 Đã đạt 10 lượt trong khi theo dõi.")
						return
					elseif currentRuns > startRuns then
						print("✅ Đã dùng thêm lượt, theo dõi lại từ đầu.")
						break
					end
				end

				if currentRuns == startRuns then
					player:Kick("⏰ 12 phút rồi mà không tăng lượt Time Trial.")
					return
				end
			end
		end)
		while true do
			local Daily_run = getRunsUsed()
			if Daily_run >= 10 then
				warn("🎯 Đã đủ 10 lượt chạy, dừng script.")
				break
			end

			warn("🔁 Bắt đầu vòng Time Trial, lượt hiện tại: " .. tostring(Daily_run))

			local savedPosition = nil
			local wasTeleportedOut = false

			local character = player.Character or player.CharacterAdded:Wait()
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if hrp then
				savedPosition = hrp.CFrame
			end

			-- Teleport vào Time Trial
			teleportTo(EnterTeleport)
			task.wait(5)
			warn("🚪 Đã teleport vào Time Trial, đang chuẩn bị farm...")

			local function retryFarmAfterStuck()
				if LeaveTeleport then
					teleportTo(LeaveTeleport)
					task.wait(10)
				end
				if EnterTeleport then
					teleportTo(EnterTeleport)
					task.wait(5)
				end
				warn("🔁 Retry sau stuck")
			end

			local stuckCallback = function()
				stopMonitorStuck()
				retryFarmAfterStuck()
				return true
			end

			startMonitorStuck(function()
				if _stuckRetries < 3 then
					if stuckCallback() then
						startMonitorStuck(stuckCallback)
						farmBreakables()
						stopMonitorStuck()
					end
				else
					player:Kick("🛑 Đứng yên quá 60s trong Time Trial (đã retry 3 lần)")
				end
			end)

			local farmResult = farmBreakables()
			stopMonitorStuck()

			if farmResult == "finished" or farmResult == "noMoreBreakables" then
				if LeaveTeleport then
					teleportTo(LeaveTeleport)
					task.wait(3)
					wasTeleportedOut = true
				end
			end

			local afterRuns = getRunsUsed()
			warn("🎉 Hoàn thành Time Trial, lượt đã dùng: " .. tostring(afterRuns))

			if savedPosition and not wasTeleportedOut then
				local fakePart = Instance.new("Part")
				fakePart.Anchored = true
				fakePart.CFrame = savedPosition
				fakePart.Transparency = 1
				fakePart.CanCollide = false
				fakePart.Parent = workspace
				teleportTo(fakePart)
				task.delay(1, function() fakePart:Destroy() end)
				warn("🔙 Quay về vị trí ban đầu")
			end

			task.wait(15)
		end

		warn("🏁 Đã hoàn tất Time Trial hoặc đạt 10 lượt.")

		-- Theo dõi reset
		task.spawn(function()
			warn("🕓 Đang chờ DailyRuns reset để chạy lại script...")
			while true do
				task.wait(300)
				local newRun = getRunsUsed()
				if newRun < 10 then
					warn("🔁 DailyRuns đã reset → chạy lại script!")
					_G.VAR_TIME_TRIAL = nil
					RunTimeTrialScript()
					break
				else
					print("⏳ Vẫn chưa reset, chờ thêm...")
				end
			end
		end)
	end)
end

-- 🚀 Khởi chạy
RunTimeTrialScript()
