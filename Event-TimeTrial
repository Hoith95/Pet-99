if _G.VAR_TIME_TRIAL then
	warn("Script đã được chạy trước đó!")
	return
end

_G.VAR_TIME_TRIAL = true

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local Save = require(game.ReplicatedStorage.Library.Client.Save)
local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)

local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function getRunsLeft()
	return 10 - getRunsUsed()
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.Points or 0) or 0
end

local function getTotalRuns()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0
end

-- GUI
local screenGui = playerGui:FindFirstChild("TimeTrialGui")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TimeTrialGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui
end

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Text = "..."
	label.Parent = screenGui
	return label
end

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local pointsLabel = screenGui:FindFirstChild("PointsLabel") or createLabel("PointsLabel", UDim2.new(0, 0, 0, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = screenGui:FindFirstChild("TimeTrialLabel") or createLabel("TimeTrialLabel", UDim2.new(0.5, 25, 0, -55), Vector2.new(0.5, 0), Color3.fromRGB(128, 0, 128))

task.spawn(function()
	while true do
		pointsLabel.Text = "Điểm: " .. tostring(getTimeTrialPoints())
		updateLabelSize(pointsLabel)
		timeTrialLabel.Text = "Time Trial: " .. tostring(getRunsLeft()) .. " / 10"
		updateLabelSize(timeTrialLabel)
		task.wait(10)
	end
end)
local function waitUntilReachMaxZone()
	local maxMapZone = 0
	local mapFolder = workspace:FindFirstChild("Map4")
	if mapFolder then
		for _, folder in ipairs(mapFolder:GetChildren()) do
			if folder:IsA("Folder") then
				local z = tonumber(folder.Name:match("^(%d+)"))
				if z and z > maxMapZone then maxMapZone = z end
			end
		end
	end

	while true do
		local _, data = ZoneCmds.GetMaxOwnedZone()
		local current = data and data.ZoneNumber or 0
		if current >= maxMapZone then break end
		task.wait(60)
	end
end

waitUntilReachMaxZone()

local function RunTimeTrialScript()
	task.spawn(function()
		local Breakables = workspace.__THINGS.Breakables
		local Enter = workspace.__THINGS.Instances.TimeTrial.Teleports.Enter
		local Leave = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

		local function teleportTo(part)
			local char = player.Character or player.CharacterAdded:Wait()
			if char and char:FindFirstChild("HumanoidRootPart") then
				char.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
			end
		end

		local function isBreakable(inst)
			return inst:IsA("Model") and tonumber(inst.Name)
		end

		local function getBreakables()
			local result = {}
			for _, b in ipairs(Breakables:GetChildren()) do
				if isBreakable(b) then table.insert(result, b.Name) end
			end
			return result
		end

		local function waitGone(name)
			while Breakables:FindFirstChild(name) do task.wait(0.1) end
		end

		local function shouldExit()
			local bp = getTimeTrialPoints()
			local br = getTotalRuns()
			for _ = 1, 10 do
				task.wait(0.1)
				if getTimeTrialPoints() > bp or getTotalRuns() > br then return true end
			end
			return false
		end

		local function teleportFarmLoop()
			local teleCount = 0
			local flagLag = false
			local lastLagCheck = os.clock()

			task.spawn(function()
				while not flagLag do
					local before = teleCount
					task.wait(60)
					if teleCount == before then
						flagLag = true
						_G.VAR_TIME_TRIAL = nil
						warn("⚠️ Lag 60s → tele out")
						teleportTo(Leave)
						task.wait(30)
						RunTimeTrialScript()
						return
					end
				end
			end)

			while not flagLag do
				local names = getBreakables()
				if #names > 0 then
					for _, name in ipairs(names) do
						local b = Breakables:FindFirstChild(name)
						if b then
							local p = b:FindFirstChildWhichIsA("BasePart")
							if p then
								teleportTo(p)
								teleCount += 1
								waitGone(name)
							end
						end
					end
				else
					if shouldExit() then
						teleportTo(Leave)
						return
					end
					local found = false
					for _ = 1, 200 do
						task.wait(0.1)
						if #getBreakables() > 0 then
							found = true
							break
						end
					end
					if not found then
						teleportTo(Leave)
						return
					end
				end
				task.wait(0.1)
			end
		end

		local used = getRunsUsed()
		if used >= 10 then return end

		warn("🔁 Bắt đầu lượt " .. tostring(used))
		teleportTo(Enter)
		task.wait(3)

		local waitTime = 0
		while #getBreakables() == 0 and waitTime < 5 do
			task.wait(0.1)
			waitTime += 0.1
		end

		teleportFarmLoop()
	end)
end

RunTimeTrialScript()

-- Restart nếu _G bị nil
task.spawn(function()
	while true do
		task.wait(10)
		if not _G.VAR_TIME_TRIAL then
			_G.VAR_TIME_TRIAL = true
			RunTimeTrialScript()
		end
	end
end)

-- Kick nếu 12 phút không thay đổi
task.spawn(function()
	while getTimeTrialPoints() <= 0 do task.wait(10) end
	while true do
		local start = getRunsUsed()
		local t = 0
		while t < 720 do
			task.wait(10)
			t += 10
			if getRunsUsed() ~= start then break end
		end
		if getRunsUsed() == start then
			player:Kick("⏰ 12 phút không thay đổi lượt Time Trial.")
			return
		end
	end
end)
