-- Kiểm tra biến toàn cục để xác định script đã chạy hay chưa
if _G.DAYGIFTFREES then
    warn("Script đã được chạy trước đó!")
    return -- Dừng script nếu đã chạy
end

-- Đánh dấu script đã được chạy
_G.DAYGIFTFREES = true

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local daycareCmds = require(ReplicatedStorage.Library.Client.DaycareCmds)
local saveModule = require(ReplicatedStorage.Library.Client.Save)

-- Kiểm tra xem có thú cưng nào đang trong máy chăm sóc hay không
local petInDaycare = function()
    return TableLength(daycareCmds.GetActive()) > 0
end

-- Tính toán thời gian còn lại của thú cưng trong máy chăm sóc
local getRemainingTime = function()
    local remainingTime = 0
    for petId, _ in pairs(daycareCmds.GetActive()) do
        local petRemainingTime = daycareCmds.ComputeRemainingTime(petId)
        if petRemainingTime > remainingTime then
            remainingTime = petRemainingTime
        end
    end
    return remainingTime
end

-- Hàm lấy pet loại Rainbow Blooming Axolotl từ Inventory
local function getRainbowAxolotlPets()
    local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Pet
    if not inventory then
        return nil
    end

    local function getPetType(pt)
        if pt == 1 then return "Golden"
        elseif pt == 2 then return "Rainbow"
        else return "Normal"
        end
    end

    local rainbowAxolotlUIDs = {}

    for PetUID, PetData in pairs(inventory) do
        if PetData.id and string.find(PetData.id, "Blooming Axolotl") then
            local petType = getPetType(PetData.pt)
            if petType == "Rainbow" then
                table.insert(rainbowAxolotlUIDs, PetUID)
                if #rainbowAxolotlUIDs >= 2 then break end -- chỉ lấy tối đa 2 UID
            end
        end
    end

    return rainbowAxolotlUIDs
end

-- Kiểm tra và thực hiện hành động nếu thú cưng đã hết thời gian trong Daycare
local checkDaycareAndReEnroll = function()
    if petInDaycare() then
        local remainingTime = getRemainingTime()
        if remainingTime <= 0 then
            ReplicatedStorage.Network:FindFirstChild("Daycare: Claim"):InvokeServer()
        end
    end

    local rainbowAxolotlUIDs = getRainbowAxolotlPets()
    if not rainbowAxolotlUIDs then return end

    for _, uid in ipairs(rainbowAxolotlUIDs) do
        local args = {
            [1] = {
                [uid] = 30
            }
        }

        local success, result = pcall(function()
            return ReplicatedStorage.Network:FindFirstChild("Daycare: Enroll"):InvokeServer(unpack(args))
        end)

        if success then break end
    end
end

-- Tính năng "Redeem Free Gift"
local redeemEvent = ReplicatedStorage.Network:FindFirstChild("Redeem Free Gift")
local redeemGifts = function()
    if redeemEvent then
        for i = 1, 12 do
            pcall(function()
                redeemEvent:InvokeServer(i)
            end)
            wait(1)
        end
    end
end

-- Chạy kiểm tra mỗi 1 phút
while true do
    wait(68)
    checkDaycareAndReEnroll()
    redeemGifts()
end
