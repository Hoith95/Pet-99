repeat task.wait() until game:IsLoaded()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
repeat task.wait() until not LocalPlayer.PlayerGui:FindFirstChild("__INTRO")

-- üéØ Danh s√°ch t√™n ho·∫∑c t·ª´ kho√° mu·ªën l·ªçc (vi·∫øt hoa th∆∞·ªùng kh√¥ng ph√¢n bi·ªát)
getgenv().GetInfo = {
    ['Pixel Rainbow Gem'] = true,     -- ch√≠nh x√°c
    ['Huge'] = true,                  -- s·∫Ω b·∫Øt m·ªçi item ch·ª©a ch·ªØ "Huge"
    ['Egg'] = true,                   -- s·∫Ω b·∫Øt m·ªçi item ch·ª©a ch·ªØ "Egg"
}

local Client = game:GetService("ReplicatedStorage").Library.Client
local SaveModule = require(Client.Save)

print("=== TH√îNG TIN V·∫¨T PH·∫®M ƒê∆Ø·ª¢C L·ªåC (C√ì PH·∫¶N T√äN TR√ôNG) ===")

local Inventory = SaveModule.Get().Inventory
local Filter = getgenv().GetInfo

-- H√†m ki·ªÉm tra item.id c√≥ kh·ªõp v·ªõi keyword n√†o kh√¥ng
local function matchesFilter(id)
    for keyword in pairs(Filter) do
        if string.find(string.lower(id), string.lower(keyword)) then
            return true
        end
    end
    return false
end

for Class, Items in pairs(Inventory) do
    for uid, item in pairs(Items) do
        local itemId = item.id or "Kh√¥ng r√µ"
        local amount = item._am or 1
        local locked = item._lk and "üîí" or "üîì"

        if matchesFilter(itemId) then
            print(string.format(">>> CLASS: %s", Class))
            print(string.format(" - ID: %s | S·ªë l∆∞·ª£ng: %s | Kho√°: %s | UID: %s", itemId, amount, locked, uid))
        end
    end
end
