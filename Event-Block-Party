if _G.VAR_BLOCK_PARTY then
	warn("‚õî Script ƒë√£ ƒë∆∞·ª£c ch·∫°y tr∆∞·ªõc ƒë√≥!")
	return
end

_G.VAR_BLOCK_PARTY = true
local isRunning = false

-- ‚öôÔ∏è D·ªãch v·ª• & Folder
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local player = game.Players.LocalPlayer
local TilesFolder = Workspace:WaitForChild("__THINGS"):WaitForChild("Tiles")
local NLibrary = ReplicatedStorage.Library
local EggCmds = require(NLibrary.Client.EggCmds)
local Save = require(ReplicatedStorage.Library.Client.Save)
local Network = ReplicatedStorage:WaitForChild("Network")
local CustomEggsFolder = Workspace:WaitForChild("__THINGS"):WaitForChild("CustomEggs")

-- üî¢ ƒê·∫øm t·ªïng s·ªë tile
local function getTotalTileCount()
	return #TilesFolder:GetChildren()
end

-- üß† D·ª´ng to√†n b·ªô khi b·ªã stop
local function waitUntilAllowed()
	while _G.VAR_STOP_BLOCK_PARTY and not _G.VAR_START_BLOCK_PARTY do
		warn("‚è∏ Script ƒëang b·ªã t·∫°m d·ª´ng b·ªüi _G.VAR_STOP_BLOCK_PARTY")
		task.wait(1)
	end
	if not _G.VAR_START_BLOCK_PARTY then
		isRunning = false
	end
end

function teleportTo(cf)
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if hrp then
		hrp.CFrame = cf
	end
end

local function teleportToBlockParty()
	local Enter = workspace.__THINGS.Instances.BlockParty.Teleports.Enter

	-- üß≠ Teleport v√†o Block Party & ƒë·∫øn v·ªã tr√≠ c·ª• th·ªÉ
	teleportTo(Enter.CFrame + Vector3.new(0, 5, 0))
	task.wait(15)
	teleportTo(CFrame.new(16460, 2275, -21473))
end
---------------- üß© LU·ªíNG 1: Mua tiles quanh plot ----------------
local function startAutoPurchase()
	local radiusMax = 6
	local delayPerTile = 0.05
	local delayPerCycle = 0.05

	local PlotsInvoke = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Plots_Invoke")

	-- üí† T·∫°o danh s√°ch offsets quanh plot
	local offsets = {}
	for dx = -radiusMax, radiusMax do
		for dy = -radiusMax, radiusMax do
			if not (dx == 0 and dy == 0) then
				table.insert(offsets, {dx, dy})
			end
		end
	end

	-- üìå H√†m l·∫•y plotIndex ƒë·ªông
	local function getCurrentPlotIndex()
		local index = 1
		pcall(function()
			local plots = Workspace.__THINGS:FindFirstChild("Plots")
			if plots then
				for _, v in ipairs(plots:GetChildren()) do
					if tonumber(v.Name) then
						index = tonumber(v.Name)
						break
					end
				end
			end
		end)
		return index
	end

	while true do
		waitUntilAllowed()
		local saveData = Save.Get()
		local tileRebirth = saveData.TileRebirth or 0
		local totalTiles = getTotalTileCount()
		local hugeChance = _G.CURRENT_HUGE_CHANCE or 0

		-- üõë D·ª´ng h·∫≥n n·∫øu ƒë·ªß 3 ƒëi·ªÅu ki·ªán
		if tileRebirth >= 15 and totalTiles >= 169 and hugeChance >= 25 then
			warn("‚úÖ ƒê√£ ƒë·∫°t ƒë·ªß ƒëi·ªÅu ki·ªán (Tiles ‚â•169, Rebirth ‚â•15, HugeChance ‚â•25x) ‚Üí D·ª´ng Auto Purchase.")
			break
		end

		if totalTiles >= 169 then
			warn("‚è≥ Tiles ‚â•169 ‚Üí ch·ªù 30s tr∆∞·ªõc khi ki·ªÉm tra l·∫°i.")
			task.wait(30)
		else
			for _, offset in ipairs(offsets) do
				local plotIndex = getCurrentPlotIndex()
				local args = {plotIndex, "PurchaseTile", offset[1], offset[2]}
				pcall(function()
					PlotsInvoke:InvokeServer(unpack(args))
				end)
				task.wait(delayPerTile)
			end
			task.wait(delayPerCycle)
		end
	end
end

---------------- üß© LU·ªíNG 2: Claim + Open + Unlock + Plant + Diamond ----------------
local function startTileHandler()
	local TilesInvoke = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Tiles_Invoke")
	local TilesFire = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Tiles_Fire")
	local delayPerTile = 0.05
	local delayPerCycle = 0.5

	while true do
		waitUntilAllowed()
		for _, tile in ipairs(TilesFolder:GetChildren()) do
			local tileId = tile.Name

			-- ‚úÖ Claim + Open (Tiles_Invoke)
			pcall(function() TilesInvoke:InvokeServer(tileId, "Claim") end)
			pcall(function() TilesInvoke:InvokeServer(tileId, "Open") end)

			-- ‚úÖ Claim + Unlock (Tiles_Fire)
			pcall(function() TilesFire:FireServer(tileId, "Claimed") end)
			pcall(function() TilesFire:FireServer(tileId, "Unlock") end)

			-- ‚úÖ Claim Plant[i] (1 -> 6)
			if tile:IsA("Model") or tile:IsA("Folder") then
				if tile:FindFirstChild("Plant1") then
					for i = 1, 6 do
						pcall(function()
							TilesInvoke:InvokeServer(tileId, "Claim", i)
						end)
						task.wait(0.05)
					end
				end

				-- ‚úÖ Claim Diamond
				if tile:FindFirstChild("Diamond") then
					pcall(function()
						TilesInvoke:InvokeServer(tileId, "Tile_ClaimDiamonds")
					end)
					task.wait(0.1)
				end
			end

			task.wait(delayPerTile)
		end

		task.wait(delayPerCycle)
	end
end

---------------- üß© LU·ªíNG 3: Hatch HUGE CHANCE ----------------
_G.CURRENT_HUGE_CHANCE = 0
local tileThreshold = 169

local function extractHugeLuckValue(text)
    local value = text:match("(%d+)x%s+Huge%s+Luck!?")
    return tonumber(value or "0")
end

local function findEggNearTile(tile)
    local closestEgg, minDist = nil, math.huge
    for _, eggModel in pairs(CustomEggsFolder:GetChildren()) do
        local egg = eggModel:FindFirstChild("Egg")
        if egg and egg:FindFirstChild("slashes") and eggModel:IsA("Model") then
            local part = eggModel:FindFirstChild("Part")
            if part and tile.PrimaryPart then
                local dist = (part.Position - tile.PrimaryPart.Position).Magnitude
                if dist < minDist then
                    closestEgg, minDist = eggModel, dist
                end
            end
        end
    end
    return closestEgg
end

local function findBestHugeTile()
    local bestTile, bestValue = nil, -1
    for _, tile in pairs(TilesFolder:GetChildren()) do
        local label = tile:FindFirstChild("Sign")
            and tile.Sign:FindFirstChild("SurfaceGui")
            and tile.Sign.SurfaceGui:FindFirstChild("Frame")
            and tile.Sign.SurfaceGui.Frame:FindFirstChild("Frame")
            and tile.Sign.SurfaceGui.Frame.Frame:FindFirstChild("TextLabel")
        if label and label:IsA("TextLabel") then
            local value = extractHugeLuckValue(label.Text)
            if value > bestValue then
                local egg = findEggNearTile(tile)
                if egg then
                    bestTile, bestValue = tile, value
                end
            end
        end
    end
    _G.CURRENT_HUGE_CHANCE = bestValue
    return bestTile, bestValue
end

local function teleportToTile(tile)
    if tile and tile:IsA("Model") and tile.PrimaryPart then
        teleportTo(tile.PrimaryPart.CFrame + Vector3.new(0, 5, 0))
        print("üìç Teleport ƒë·∫øn tile:", tile.Name)
    end
end

local function handleRejoin()
    local Leave = workspace.__THINGS.Instances.LuckyBlocks.Teleports.Leave
    teleportTo(Leave.CFrame + Vector3.new(0, 5, 0))
    task.wait(15)
    teleportToBlockParty()
    task.wait(9)
end

local function isNearEgg(egg)
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not (hrp and egg) then return false end
    local part = egg:FindFirstChild("Part")
    if not part then return false end
    return (hrp.Position - part.Position).Magnitude < 15
end

local function startAutoHatchHuge()
    task.spawn(function()
        -- üß∑ Lu·ªìng n√†y ch·ªâ b·∫Øt ƒë·∫ßu khi ƒë·ªß tiles
        while getTotalTileCount() < tileThreshold do
            warn("‚è≥ Tiles ch∆∞a ƒë·∫°t ƒë·ªß " .. tileThreshold .. " ‚Üí ch∆∞a kh·ªüi ƒë·ªông Lu·ªìng 3")
            task.wait(5)
        end

        task.wait(2)

        -- T·∫Øt animation m·ªü tr·ª©ng
        local successEggs, Eggs = pcall(function()
            return player:WaitForChild("PlayerScripts"):WaitForChild("Scripts"):WaitForChild("Game"):WaitForChild("Egg Opening Frontend")
        end)
        if successEggs and Eggs then
            pcall(function()
                getsenv(Eggs).PlayEggAnimation = function() return end
            end)
        end

        local bestTile, bestEgg = nil, nil

        local function safeHatchLoop()
            while true do
                waitUntilAllowed()

                if not bestEgg or not bestEgg:IsDescendantOf(workspace) then
                    warn("‚ùå Egg hi·ªán t·∫°i ƒë√£ m·∫•t, ƒëang t√¨m l·∫°i...")
                    task.wait(2)
                    bestEgg = findEggNearTile(bestTile)
                    if bestEgg then
                        print("‚úÖ ƒê√£ t√¨m l·∫°i ƒë∆∞·ª£c egg:", bestEgg.Name)
                        teleportTo(bestEgg.Part.CFrame + Vector3.new(0, 5, 0))
                        task.wait(1)
                    else
                        print("‚ùå Kh√¥ng t√¨m th·∫•y egg ‚Üí reset map")
                        handleRejoin()
                        break
                    end
                end

                if not isNearEgg(bestEgg) then
                    print("üö∂‚Äç‚ôÇÔ∏è Kh√¥ng ·ªü g·∫ßn egg, teleport l·∫°i...")
                    teleportTo(bestEgg.Part.CFrame + Vector3.new(0, 5, 0))
                    task.wait(1)
                end

                local MaxEggHatch = EggCmds.GetMaxHatch()
                local args = {bestEgg.Name, MaxEggHatch}
                local success, err = pcall(function()
                    Network.CustomEggs_Hatch:InvokeServer(unpack(args))
                end)
                if not success then
                    warn("‚ùå Hatch l·ªói:", err)
                end

                task.wait(0.5)
            end
        end

        -- üîÅ V√≤ng ki·ªÉm tra tile t·ªët h∆°n m·ªói 10 ph√∫t
        while true do
            waitUntilAllowed()
            local initialTile, initialChance = findBestHugeTile()
            if initialTile and initialChance > 0 then
                bestTile = initialTile
                bestEgg = findEggNearTile(initialTile)
                teleportToTile(bestTile)
                task.wait(1)
                print("ü•ö B·∫Øt ƒë·∫ßu n·ªü ·ªü tile:", bestTile.Name, "|", tostring(_G.CURRENT_HUGE_CHANCE) .. "x")

                task.spawn(function()
                    while true do
                        task.wait(600)
                        waitUntilAllowed()
                        local newTile, newChance = findBestHugeTile()
                        if newTile and newTile.PrimaryPart and newChance > (_G.CURRENT_HUGE_CHANCE or 0) then
                            _G.CURRENT_HUGE_CHANCE = newChance
                            print("üîÅ Tile m·ªõi t·ªët h∆°n:", newTile.Name, "|", tostring(newChance) .. "x")

                            bestTile = newTile
                            bestEgg = findEggNearTile(newTile)
                            teleportToTile(newTile)
                            task.wait(1)

                            if bestEgg then
                                print("‚úÖ Egg m·ªõi:", bestEgg.Name)
                            else
                                warn("‚ùå Kh√¥ng t√¨m th·∫•y egg m·ªõi!")
                            end
                        else
                            print("‚è∏ V·∫´n gi·ªØ tile:", bestTile.Name, "|", tostring(_G.CURRENT_HUGE_CHANCE) .. "x")
                        end
                    end
                end)

                safeHatchLoop()
            else
                print("‚ùå Kh√¥ng c√≥ tile n√†o c√≥ Huge Chance + egg.slashes ‚Üí th·ª≠ teleport th·ªß c√¥ng tr∆∞·ªõc khi reset")
                teleportTo(CFrame.new(16460, 2275, -21473))
                task.wait(3)

                local retryTile, retryChance = findBestHugeTile()
                if retryTile and retryChance > 0 then
                    _G.CURRENT_HUGE_CHANCE = retryChance
                    bestTile = retryTile
                    bestEgg = findEggNearTile(retryTile)
                    teleportToTile(retryTile)
                    task.wait(1)
                    safeHatchLoop()
                else
                    print("‚ùå V·∫´n kh√¥ng t√¨m th·∫•y tile ‚Üí reset map")
                    handleRejoin()
                end
            end
            task.wait(5)
        end
    end)
end

---------------- üß© LU·ªíNG 4: Auto SummerGiftBag2025 ----------------
local function startAutoGiftBag()
    local function getCurrencyAmount(itemId)
        local Inventory = Save.Get().Inventory
        for _, v in pairs(Inventory.Misc) do 
            if v.id == itemId then
                return tonumber(v._am) or 0
            end
        end
        return 0
    end

    while true do
        waitUntilAllowed()

        if getTotalTileCount() >= 50 then
            local flowerCount = getCurrencyAmount("Tropical Flower")
            if flowerCount >= 10 then
                local args = {10}
                pcall(function()
                    Network.SummerGiftBag2025Machine_Activate:InvokeServer(unpack(args))
                    print("üéÅ ƒê√£ ƒë·ªïi 10 Tropical Flower th√†nh Gift Bag")
                end)
            end
        end

        task.wait(30)
    end
end

---------------- üß© LU·ªíNG 5: Auto Rebirth (c·∫£i ti·∫øn) ----------------
local function startAutoRebirth()
	local PlotsInvoke = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Plots_Invoke")
	local threshold = 169

	while true do
		waitUntilAllowed()
		local saveData = Save.Get()
		local tileRebirth = saveData.TileRebirth or 0
		local hugeChance = _G.CURRENT_HUGE_CHANCE or 0

		if tileRebirth >= 15 and hugeChance >= 25 then
			warn("üõë ƒê√£ ƒë·∫°t TileRebirth = 15 v√† HugeChance >= 25x ‚Üí D·ª´ng Auto Rebirth.")
			break
		end

		if getTotalTileCount() >= threshold then
			local args = {1, "Rebirth"}
			pcall(function()
				PlotsInvoke:InvokeServer(unpack(args))
				print("üîÅ ƒê√£ g·ª≠i y√™u c·∫ßu Rebirth | TileRebirth hi·ªán t·∫°i:", tileRebirth)
			end)
		end

		task.wait(2)
	end
end
        	
---------------- üöÄ K√≠ch ho·∫°t t·∫•t c·∫£ lu·ªìng song song ----------------
local function startAllBlockPartyTasks()
	if isRunning then return end
	isRunning = true
	print("üöÄ ƒê√£ k√≠ch ho·∫°t startAllBlockPartyTasks")

	-- üß© LU·ªíNG 1: Auto Purchase
	task.spawn(function()
		local Save = require(ReplicatedStorage.Library.Client.Save)
		while true do
			local saveData = Save.Get()
			local tileRebirth = saveData.TileRebirth or 0
			local totalTiles = getTotalTileCount()
			local hugeChance = _G.CURRENT_HUGE_CHANCE or 0

			if tileRebirth >= 15 and totalTiles >= 169 and hugeChance >= 25 then
				warn("üõë ƒê√£ ƒë·∫°t ƒë·ªß ƒëi·ªÅu ki·ªán (15 Rebirth, 169 Tiles, 25x Huge) ‚Üí KH√îNG kh·ªüi ƒë·ªông lu·ªìng mua tiles.")
				break
			else
				print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 1: Auto Purchase")
				startAutoPurchase()
				break
			end
			task.wait(5)
		end
	end)

	-- üß© LU·ªíNG 2: Tile Handler
	task.spawn(function()
		print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 2: Tile Handler (Claim/Open/Unlock/Plant/Diamond)")
		startTileHandler()
	end)

	-- üß© LU·ªíÃÄNG 3: Hatch HUGE CHANCE
	task.spawn(function()
	    while true do
	        while getTotalTileCount() < tileThreshold do
	            warn("‚è≥ Tiles ch∆∞a ƒë·∫°t ƒë·ªß " .. tileThreshold .. " ‚Üí ch∆∞a kh·ªüi Lu·ªìng¬†3")
	            task.wait(5)
	        end

	        print("‚úÖ ƒê√£ ƒë·ªß " .. tileThreshold .. " tiles ‚Üí Kh·ªüi LU·ªíÃÄNG¬†3: Hatch HUGE CHANCE")
	        startAutoHatchHuge()

	        repeat
	            task.wait(5)
	        until getTotalTileCount() < tileThreshold

	        print("üîÑ Tiles ƒë√£ xu·ªëng d∆∞·ªõi " .. tileThreshold .. ", chu·∫©n b·ªã ch·∫°y l·∫°i Lu·ªìng¬†3")
	    end
	end)

	-- üß© LU·ªíNG 4: Auto Gift Bag
	task.spawn(function()
		while true do
			while getTotalTileCount() < 50 do
				task.wait(2)
			end
			print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 4: Auto SummerGiftBag2025")
			startAutoGiftBag()
		end
	end)

	-- üß© LU·ªíNG 5: Auto Rebirth
	task.spawn(function()
		local Save = require(ReplicatedStorage.Library.Client.Save)
		while true do
			local saveData = Save.Get()
			local tileRebirth = saveData.TileRebirth or 0
			local hugeChance = _G.CURRENT_HUGE_CHANCE or 0

			if tileRebirth >= 15 and hugeChance >= 25 then
				warn("üõë ƒê√£ ƒë·∫°t TileRebirth = 15 v√† HugeChance >= 25x ‚Üí KH√îNG kh·ªüi ƒë·ªông lu·ªìng Rebirth.")
				break
			else
				print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 5: Auto Rebirth")
				startAutoRebirth()
				break
			end
			task.wait(5)
		end
	end)
end

task.spawn(function()
	while true do
		if _G.VAR_STOP_BLOCK_PARTY and _G.VAR_BLOCK_PARTY then
			isRunning = false
			
		end

		if _G.VAR_START_BLOCK_PARTY and not isRunning then
			startAllBlockPartyTasks()
			teleportToBlockParty()
		end

		task.wait(2)
	end
end)
