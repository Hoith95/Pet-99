if _G.VAR_BLOCK_PARTY then
	warn("‚õî Script ƒë√£ ƒë∆∞·ª£c ch·∫°y tr∆∞·ªõc ƒë√≥!")
	return
end

_G.VAR_BLOCK_PARTY = true
local isRunning = false

-- ‚öôÔ∏è D·ªãch v·ª• & Folder
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local player = game.Players.LocalPlayer
local TilesFolder = Workspace:WaitForChild("__THINGS"):WaitForChild("Tiles")
local NLibrary = ReplicatedStorage.Library
local EggCmds = require(NLibrary.Client.EggCmds)
local Save = require(ReplicatedStorage.Library.Client.Save)
local Network = ReplicatedStorage:WaitForChild("Network")
local CustomEggsFolder = Workspace:WaitForChild("__THINGS"):WaitForChild("CustomEggs")
local leaderstats = player:FindFirstChild("leaderstats")

-- üî¢ ƒê·∫øm t·ªïng s·ªë tile
local function getTotalTileCount()
	return #TilesFolder:GetChildren()
end

-- üß† D·ª´ng to√†n b·ªô khi b·ªã stop
local function waitUntilAllowed()
	while _G.VAR_STOP_BLOCK_PARTY and not _G.VAR_START_BLOCK_PARTY do
		warn("‚è∏ Script ƒëang b·ªã t·∫°m d·ª´ng b·ªüi _G.VAR_STOP_BLOCK_PARTY")
		task.wait(1)
	end
	if not _G.VAR_START_BLOCK_PARTY then
		isRunning = false
	end
end

function teleportTo(cf)
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if hrp then
		hrp.CFrame = cf
	end
end

local function teleportToBlockParty()
	local Enter = workspace.__THINGS.Instances.BlockParty.Teleports.Enter

	-- üß≠ Teleport v√†o Block Party & ƒë·∫øn v·ªã tr√≠ c·ª• th·ªÉ
	teleportTo(Enter.CFrame + Vector3.new(0, 5, 0))
	task.wait(15)
	teleportTo(CFrame.new(16460, 2275, -21473))
end

teleportToBlockParty()

---------------- üß© LU·ªíNG 1: Mua tiles quanh plot ----------------
local function startAutoPurchase()
	local plotIndex = 1
	local radiusMax = 6
	local delayPerTile = 0.05
	local delayPerCycle = 0.05
	local PlotsInvoke = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Plots_Invoke")

	local offsets = {}
	for dx = -radiusMax, radiusMax do
		for dy = -radiusMax, radiusMax do
			if not (dx == 0 and dy == 0) then
				table.insert(offsets, {dx, dy})
			end
		end
	end

	while true do
		waitUntilAllowed()
		local saveData = Save.Get()
		local tileRebirth = saveData.TileRebirth or 0
		local totalTiles = getTotalTileCount()
		if tileRebirth >= 15 and totalTiles >= 169 then
			warn("üõë ƒê√£ ƒë·∫°t TileRebirth = 15 v√† Tiles = 169 ‚Üí D·ª´ng Auto Purchase.")
			break
		end

		for _, offset in ipairs(offsets) do
			local args = {plotIndex, "PurchaseTile", offset[1], offset[2]}
			pcall(function()
				PlotsInvoke:InvokeServer(unpack(args))
			end)
			task.wait(delayPerTile)
		end
		task.wait(delayPerCycle)
	end
end

---------------- üß© LU·ªíNG 2: Claim + Open + Unlock + Plant + Diamond ----------------
local function startTileHandler()
	local TilesInvoke = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Tiles_Invoke")
	local TilesFire = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Tiles_Fire")
	local delayPerTile = 0.05
	local delayPerCycle = 0.5

	while true do
		waitUntilAllowed()
		for _, tile in ipairs(TilesFolder:GetChildren()) do
			local tileId = tile.Name

			-- ‚úÖ Claim + Open (Tiles_Invoke)
			pcall(function() TilesInvoke:InvokeServer(tileId, "Claim") end)
			pcall(function() TilesInvoke:InvokeServer(tileId, "Open") end)

			-- ‚úÖ Claim + Unlock (Tiles_Fire)
			pcall(function() TilesFire:FireServer(tileId, "Claimed") end)
			pcall(function() TilesFire:FireServer(tileId, "Unlock") end)

			-- ‚úÖ Claim Plant[i] (1 -> 6)
			if tile:IsA("Model") or tile:IsA("Folder") then
				if tile:FindFirstChild("Plant1") then
					for i = 1, 6 do
						pcall(function()
							TilesInvoke:InvokeServer(tileId, "Claim", i)
						end)
						task.wait(0.05)
					end
				end

				-- ‚úÖ Claim Diamond
				if tile:FindFirstChild("Diamond") then
					pcall(function()
						TilesInvoke:InvokeServer(tileId, "Tile_ClaimDiamonds")
					end)
					task.wait(0.1)
				end
			end

			task.wait(delayPerTile)
		end

		task.wait(delayPerCycle)
	end
end

---------------- üß© LU·ªíNG 3: Hatch HUGE CHANCE ----------------
local currentChance = 0
local tileThreshold = 169

local function extractHugeLuckValue(text)
	local value = text:match("(%d+)x%s+Huge%s+Luck!?")
	return tonumber(value or "0")
end

local function findEggNearTile(tile)
	local closestEgg, minDist = nil, math.huge
	for _, eggModel in pairs(CustomEggsFolder:GetChildren()) do
		local egg = eggModel:FindFirstChild("Egg")
		if egg and egg:FindFirstChild("slashes") and eggModel:IsA("Model") then
			local part = eggModel:FindFirstChild("Part")
			if part and tile.PrimaryPart then
				local dist = (part.Position - tile.PrimaryPart.Position).Magnitude
				if dist < minDist then
					closestEgg, minDist = eggModel, dist
				end
			end
		end
	end
	return closestEgg
end

local function findBestHugeTile()
	local bestTile, bestValue = nil, -1
	for _, tile in pairs(TilesFolder:GetChildren()) do
		local label = tile:FindFirstChild("Sign")
			and tile.Sign:FindFirstChild("SurfaceGui")
			and tile.Sign.SurfaceGui:FindFirstChild("Frame")
			and tile.Sign.SurfaceGui.Frame:FindFirstChild("Frame")
			and tile.Sign.SurfaceGui.Frame.Frame:FindFirstChild("TextLabel")
		if label and label:IsA("TextLabel") then
			local value = extractHugeLuckValue(label.Text)
			if value > bestValue then
				local egg = findEggNearTile(tile)
				if egg then
					bestTile, bestValue = tile, value
				end
			end
		end
	end
	return bestTile, bestValue
end

local function teleportToTile(tile)
	if tile and tile:IsA("Model") and tile.PrimaryPart then
		teleportTo(tile.PrimaryPart.CFrame + Vector3.new(0, 5, 0))
		print("üìç Teleport ƒë·∫øn tile:", tile.Name)
	end
end

local function handleRejoin()
	local Leave = workspace.__THINGS.Instances.LuckyBlocks.Teleports.Leave
	teleportTo(Leave.CFrame + Vector3.new(0, 5, 0))
	task.wait(15)
	teleportToBlockParty()
	task.wait(9)
end

local function isNearEgg(egg)
	local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not (hrp and egg) then return false end
	local part = egg:FindFirstChild("Part")
	if not part then return false end
	return (hrp.Position - part.Position).Magnitude < 15
end

local function startAutoHatchHuge()
	task.wait(20)

	-- T·∫Øt animation m·ªü tr·ª©ng
	local successEggs, Eggs = pcall(function()
		return player:WaitForChild("PlayerScripts"):WaitForChild("Scripts"):WaitForChild("Game"):WaitForChild("Egg Opening Frontend")
	end)
	if successEggs and Eggs then
		pcall(function()
			getsenv(Eggs).PlayEggAnimation = function() return end
		end)
	end

	local bestTile, bestEgg = nil, nil

	local function safeHatchLoop()
		while true do
			waitUntilAllowed()

			while getTotalTileCount() < tileThreshold do
				warn("‚è≥ Tiles hi·ªán t·∫°i d∆∞·ªõi " .. tileThreshold .. " ‚Üí ƒëang ch·ªù...")
				task.wait(3)
			end

			if not bestEgg or not bestEgg:IsDescendantOf(workspace) then
				warn("‚ùå Egg hi·ªán t·∫°i ƒë√£ m·∫•t, ƒëang t√¨m l·∫°i...")
				task.wait(2)
				bestEgg = findEggNearTile(bestTile)
				if bestEgg then
					print("‚úÖ ƒê√£ t√¨m l·∫°i ƒë∆∞·ª£c egg:", bestEgg.Name)
					teleportTo(bestEgg.Part.CFrame + Vector3.new(0, 5, 0))
					task.wait(1)
				else
					print("‚ùå Kh√¥ng t√¨m th·∫•y egg ‚Üí reset map")
					handleRejoin()
					break
				end
			end

			if not isNearEgg(bestEgg) then
				print("üö∂‚Äç‚ôÇÔ∏è Kh√¥ng ·ªü g·∫ßn egg, teleport l·∫°i...")
				teleportTo(bestEgg.Part.CFrame + Vector3.new(0, 5, 0))
				task.wait(1)
			end

			local MaxEggHatch = EggCmds.GetMaxHatch()
			local args = {bestEgg.Name, MaxEggHatch}
			local success, err = pcall(function()
				Network.CustomEggs_Hatch:InvokeServer(unpack(args))
			end)
			if not success then
				warn("‚ùå Hatch l·ªói:", err)
			end

			task.wait(0.5)
		end
	end

	while true do
		waitUntilAllowed()
		if getTotalTileCount() >= tileThreshold then
			local initialTile, initialChance = findBestHugeTile()
			if initialTile and initialChance > 0 then
				currentChance = initialChance
				bestTile = initialTile
				bestEgg = findEggNearTile(initialTile)
				teleportToTile(bestTile)
				task.wait(1)
				print("ü•ö B·∫Øt ƒë·∫ßu n·ªü ·ªü tile:", bestTile.Name, "|", currentChance .. "x")

				task.spawn(function()
					while true do
						task.wait(600)
						waitUntilAllowed()
						local newTile, newChance = findBestHugeTile()
						if newTile and newTile.PrimaryPart and newChance > currentChance then
							currentChance = newChance
							print("üîÅ Tile m·ªõi t·ªët h∆°n:", newTile.Name, "|", newChance .. "x")

							bestTile = newTile
							bestEgg = findEggNearTile(newTile)
							teleportToTile(newTile)
							task.wait(1)

							if bestEgg then
								print("‚úÖ Egg m·ªõi:", bestEgg.Name)
							else
								warn("‚ùå Kh√¥ng t√¨m th·∫•y egg m·ªõi!")
							end
						else
							print("‚è∏ V·∫´n gi·ªØ tile:", bestTile.Name, "|", currentChance .. "x")
						end
					end
				end)

				safeHatchLoop()
			else
				print("‚ùå Kh√¥ng c√≥ tile n√†o c√≥ Huge Chance + egg.slashes ‚Üí th·ª≠ teleport th·ªß c√¥ng tr∆∞·ªõc khi reset")
				teleportTo(CFrame.new(16460, 2275, -21473))
				task.wait(3)

				local retryTile, retryChance = findBestHugeTile()
				if retryTile and retryChance > 0 then
					print("‚úÖ ƒê√£ t√¨m th·∫•y tile sau khi teleport th·ªß c√¥ng:", retryTile.Name, "|", retryChance .. "x")
					currentChance = retryChance
					bestTile = retryTile
					bestEgg = findEggNearTile(retryTile)
					teleportToTile(retryTile)
					task.wait(1)
					safeHatchLoop()
				else
					print("‚ùå V·∫´n kh√¥ng t√¨m th·∫•y tile ‚Üí reset map")
					handleRejoin()
				end
			end
		end
		task.wait(5)
	end
end

---------------- üß© LU·ªíNG 4: Auto SummerGiftBag2025 ----------------
local function startAutoGiftBag()
    local function getCurrencyAmount(itemId)
        local Inventory = Save.Get().Inventory
        for _, v in pairs(Inventory.Misc) do 
            if v.id == itemId then
                return tonumber(v._am) or 0
            end
        end
        return 0
    end

    while true do
        waitUntilAllowed()

        if getTotalTileCount() >= 50 then
            local flowerCount = getCurrencyAmount("Tropical Flower")
            if flowerCount >= 10 then
                local args = {10}
                pcall(function()
                    Network.SummerGiftBag2025Machine_Activate:InvokeServer(unpack(args))
                    print("üéÅ ƒê√£ ƒë·ªïi 10 Tropical Flower th√†nh Gift Bag")
                end)
            end
        end

        task.wait(30)
    end
end

---------------- üß© LU·ªíNG 5: Auto Rebirth ----------------
local function startAutoRebirth()
	local PlotsInvoke = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Plots_Invoke")
	local threshold = 169
	local maxTileRebirth = 15

	while true do
		waitUntilAllowed()
		local saveData = Save.Get()
		local tileRebirth = saveData.TileRebirth or 0

		if tileRebirth >= maxTileRebirth then
			warn("üõë ƒê√£ ƒë·∫°t TileRebirth =", tileRebirth, "- D·ª´ng Auto Rebirth.")
			break
		end

		if getTotalTileCount() >= threshold then
			local args = {1, "Rebirth"}
			pcall(function()
				PlotsInvoke:InvokeServer(unpack(args))
				print("üîÅ ƒê√£ g·ª≠i y√™u c·∫ßu Rebirth | TileRebirth hi·ªán t·∫°i:", tileRebirth)
			end)
		end

		task.wait(2)
	end
end

---------------- üß© LU·ªíNG 6: GUI Coins / Tiles / Chance / GEMS / Time ----------------
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- H√†m format s·ªë l·ªõn th√†nh chu·ªói d·∫°ng 1.23M, 4.56B...
local Formatint = function(int)
    local Suffix = {"", "k", "M", "B", "T", "Qd", "Qn", "Sx", "Sp", "Oc", "No", "De", "UDe", "DDe"}
    local Index = 1
    if int < 999 then 
        return tostring(int)
    end
    while int >= 1000 and Index < #Suffix do
        int = int / 1000
        Index = Index + 1
    end
    return string.format("%.2f%s", int, Suffix[Index])
end

-- H√†m format th·ªùi gian t·ª´ gi√¢y th√†nh HH:MM:SS
local function formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local remainingSeconds = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", hours, minutes, remainingSeconds)
end

-- H√†m c·∫≠p nh·∫≠t k√≠ch th∆∞·ªõc label theo text
local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

-- L·∫•y Diamonds t·ª´ leaderstats
local function getDiamondsFromLeaderstats()
	local stats = player:FindFirstChild("leaderstats")
	if stats then
		local diamonds = stats:FindFirstChild("üíé Diamonds")
		if diamonds then
			return diamonds.Value
		end
	end
	return 0
end

-- L·∫•y s·ªë l∆∞·ª£ng currency theo id
local function getCurrencyAmount(currencyId)
	local Inventory = Save.Get().Inventory
	for _, v in pairs(Inventory.Currency) do 
		if v.id == currencyId then
			return v._am or 0
		end
	end
	return 0
end

-- L·∫•y s·ªë l∆∞·ª£ng Lootbox theo id
local function getLootboxAmount(itemId)
        local Inventory = Save.Get().Inventory
        for _, v in pairs(Inventory.Lootbox) do 
            if v.id == itemId then
                return tonumber(v._am) or 0
            	end
        end
        return 0
end

local function getMiscAmount(itemId)
        local Inventory = Save.Get().Inventory
        for _, v in pairs(Inventory.Misc) do 
            if v.id == itemId then
                return tonumber(v._am) or 0
            	end
        end
        return 0
end

-- H√†m kh·ªüi t·∫°o GUI
local function startGuiUpdater()
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- Xo√° GUI c≈© n·∫øu ƒë√£ c√≥
    local oldGui = playerGui:FindFirstChild("BlockPartyGui")
    if oldGui then oldGui:Destroy() end

    -- T·∫°o ScreenGui m·ªõi
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BlockPartyGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- H√†m t·∫°o khu v·ª±c (region)
    local function createRegion(position, anchor, alignment)
        local frame = Instance.new("Frame")
        frame.BackgroundTransparency = 1
        frame.Size = UDim2.new(0, 250, 1, 0)
        frame.Position = position
        frame.AnchorPoint = anchor
        frame.Parent = screenGui

        local layout = Instance.new("UIListLayout")
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0, 4)
        layout.HorizontalAlignment = alignment
        layout.VerticalAlignment = Enum.VerticalAlignment.Top
        layout.Parent = frame

        return frame
    end

    local rightRegion  = createRegion(UDim2.new(1, -30, 0, -10), Vector2.new(1, 0), Enum.HorizontalAlignment.Right)
    local centerRegion = createRegion(UDim2.new(0.5, -10, 0, -10), Vector2.new(0.5, 0), Enum.HorizontalAlignment.Center)
    local leftRegion   = createRegion(UDim2.new(0, 0, 0, -10), Vector2.new(0, 0), Enum.HorizontalAlignment.Left)

    -- H√†m t·∫°o label
    local function createLabel(name, parent, bgColor)
        local label = Instance.new("TextLabel")
        label.Name = name
        label.Size = UDim2.new(1, 0, 0, 38)
        label.BackgroundColor3 = bgColor
        label.TextColor3 = Color3.new(1, 1, 1)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 32
        label.BackgroundTransparency = 0
        label.BorderSizePixel = 0
        label.TextXAlignment = Enum.TextXAlignment.Center
        label.Text = "..."
        label.AutoLocalize = false
        label.Parent = parent
        return label
    end

    -- T·∫°o c√°c label v·ªõi m√†u c√¢n ƒë·ªëi
    local tilesLabel    = createLabel("TilesLabel",   leftRegion,   Color3.fromRGB(34, 139, 34))   -- xanh l√° ƒë·∫≠m
    local coinsLabel    = createLabel("CoinsLabel",   centerRegion, Color3.fromRGB(255, 140, 0))   -- cam ƒë·∫≠m
    local chanceLabel   = createLabel("ChanceLabel",  rightRegion,  Color3.fromRGB(0, 102, 204))  -- xanh d∆∞∆°ng ƒë·∫≠m
    local rebirthLabel  = createLabel("RebirthLabel", rightRegion,  Color3.fromRGB(148, 0, 211))   -- t√≠m ƒë·∫≠m
    local giftLabel     = createLabel("TropicalGiftLabel", rightRegion, Color3.fromRGB(255, 105, 180)) -- h·ªìng ƒë·∫≠m
    local ticketLabel   = createLabel("SBPTicketLabel",   rightRegion, Color3.fromRGB(30, 144, 255))  -- xanh d∆∞∆°ng s√°ng
    local gemsLabel     = createLabel("GemsLabel",    rightRegion,  Color3.fromRGB(0, 255, 255))   -- xanh kim c∆∞∆°ng
    local timeLabel     = createLabel("TimeLabel",    rightRegion,  Color3.fromRGB(169, 169, 169)) -- x√°m trung t√≠nh

    -- Th·ªùi gian b·∫Øt ƒë·∫ßu ƒë·ªÉ ƒë·∫øm
    local startTime = os.time()

    -- V√≤ng l·∫∑p c·∫≠p nh·∫≠t GUI
	while true do
	waitUntilAllowed()

        -- Tiles (tr√°i)
        tilesLabel.Text   = tostring(getTotalTileCount()) .. " | TILES"
	updateLabelSize(tilesLabel)
        -- Coins (gi·ªØa), ƒë·ªãnh d·∫°ng gi·ªëng Gems
        coinsLabel.Text   = "COINS: " .. Formatint(getCurrencyAmount("BlockPartyCoins"))
	updateLabelSize(coinsLabel)
        -- Chance (ph·∫£i)
        chanceLabel.Text  = "HUGE | x" .. tostring(currentChance)
	updateLabelSize(chanceLabel)
        -- Rebirth (ph·∫£i)
        rebirthLabel.Text = tostring(Save.Get().TileRebirth or 0) .. " | REBIRTH"
	updateLabelSize(rebirthLabel)
        -- Tropical Gift (ph·∫£i)
        giftLabel.Text    = tostring(getLootboxAmount("Tropical Gift")) .. " | Tropical Gift"
	updateLabelSize(giftLabel)
        -- Summer Ticket (ph·∫£i)
        ticketLabel.Text  = tostring(getMiscAmount("Summer Block Party Ticket")) .. " | Summer Ticket"
	updateLabelSize(ticketLabel)
        -- Gems (m·ªõi, ph·∫£i)
        gemsLabel.Text    = Formatint(getDiamondsFromLeaderstats()) .. " | GEMS"
	updateLabelSize(gemsLabel)
        -- Th·ªùi gian (m·ªõi, ph·∫£i)
        timeLabel.Text    = formatTime(os.time() - startTime) .. " | TIMES "
	updateLabelSize(timeLabel)

        task.wait(1)
    end
end
        	
---------------- üöÄ K√≠ch ho·∫°t t·∫•t c·∫£ lu·ªìng song song ----------------
local function startAllBlockPartyTasks()
	if isRunning then return end
	isRunning = true
	print("üöÄ ƒê√£ k√≠ch ho·∫°t startAllBlockPartyTasks")

	-- üß© LU·ªíNG 1: Auto Purchase
	task.spawn(function()
		local Save = require(ReplicatedStorage.Library.Client.Save)
		while true do
			local saveData = Save.Get()
			local tileRebirth = saveData.TileRebirth or 0
			local totalTiles = getTotalTileCount()

			if tileRebirth < 15 or totalTiles < 169 then
				print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 1: Auto Purchase")
				startAutoPurchase()
				break
			end
			task.wait(5)
		end
	end)

	-- üß© LU·ªíNG 2: Tile Handler
	task.spawn(function()
		print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 2: Tile Handler (Claim/Open/Unlock/Plant/Diamond)")
		startTileHandler()
	end)

	-- üß© LU·ªíNG 3: Hatch HUGE
	task.spawn(function()
		while true do
			while getTotalTileCount() < 169 do
				task.wait(2)
			end
			print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 3: Hatch HUGE CHANCE")
			startAutoHatchHuge()
		end
	end)

	-- üß© LU·ªíNG 4: Auto Gift Bag
	task.spawn(function()
		while true do
			while getTotalTileCount() < 50 do
				task.wait(2)
			end
			print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 4: Auto SummerGiftBag2025")
			startAutoGiftBag()
		end
	end)

	-- üß© LU·ªíNG 5: Auto Rebirth
	task.spawn(function()
		local Save = require(ReplicatedStorage.Library.Client.Save)
		while true do
			local saveData = Save.Get()
			local tileRebirth = saveData.TileRebirth or 0
			if tileRebirth < 15 then
				print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 5: Auto Rebirth")
				startAutoRebirth()
				break
			end
			task.wait(5)
		end
	end)

	-- üß© LU·ªíNG 6: GUI Updater
	task.spawn(function()
		print("‚úÖ ƒê√£ kh·ªüi ƒë·ªông LU·ªíNG 6: GUI Updater")
		startGuiUpdater()
	end)
end

task.spawn(function()
	while true do
		if _G.VAR_STOP_BLOCK_PARTY and _G.VAR_BLOCK_PARTY then
			isRunning = false
		end

		if _G.VAR_START_BLOCK_PARTY and not isRunning then
			startAllBlockPartyTasks()
		end

		task.wait(2)
	end
end)
