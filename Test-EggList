local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local player = game.Players.LocalPlayer
local TilesFolder = Workspace:WaitForChild("__THINGS"):WaitForChild("Tiles")
local NLibrary = ReplicatedStorage.Library
local EggCmds = require(NLibrary.Client.EggCmds)
local Save = require(ReplicatedStorage.Library.Client.Save)
local Network = ReplicatedStorage:WaitForChild("Network")
local CustomEggsFolder = Workspace:WaitForChild("__THINGS"):WaitForChild("CustomEggs")

local function extractHugeLuckValue(text)
    local value = text:match("(%d+)x%s+Huge%s+Luck!?")
    return tonumber(value or "0")
end

local function hasSlashes(egg)
    local eggContainer = egg:FindFirstChild("Egg")
    return eggContainer and eggContainer:FindFirstChild("slashes") ~= nil
end

local function findValidEggNearTile(tile)
    local closestEgg, minDist = nil, math.huge
    for _, egg in pairs(workspace.__THINGS.CustomEggs:GetChildren()) do
        if #egg.Name == 32 and egg:IsA("Model") and egg:FindFirstChild("Part") and hasSlashes(egg) then
            local dist = (egg.Part.Position - tile.PrimaryPart.Position).Magnitude
            if dist < minDist then
                closestEgg, minDist = egg, dist
            end
        end
    end
    return closestEgg
end

local function findBestHugeTile()
    local bestTile, bestValue = nil, -1
    for _, tile in pairs(workspace.TilesFolder:GetChildren()) do
        if tile.PrimaryPart then
            local label = tile:FindFirstChild("Sign")
                and tile.Sign.SurfaceGui
                and tile.Sign.SurfaceGui.Frame
                and tile.Sign.SurfaceGui.Frame.Frame
                and tile.Sign.SurfaceGui.Frame.Frame:FindFirstChild("TextLabel")
            if label and label:IsA("TextLabel") then
                local chance = extractHugeLuckValue(label.Text)
                if chance > bestValue then
                    if findValidEggNearTile(tile) then
                        bestTile, bestValue = tile, chance
                    end
                end
            end
        end
    end
    return bestTile, bestValue
end

local tile, chance = findBestHugeTile()
if tile then
    print("üèÜ Best Tile:", tile.Name, "| Huge Chance:", chance .. "x")
    local egg = findValidEggNearTile(tile)
    if egg then
        print("ü•ö Valid Egg Near Tile:", egg.Name)
    else
        print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y egg h·ª£p l·ªá g·∫ßn tile n√†y.")
    end
else
    print("‚ùå Kh√¥ng t·ªìn t·∫°i tile h·ª£p l·ªá v·ªõi Huge Chance v√† egg slashes.")
end
